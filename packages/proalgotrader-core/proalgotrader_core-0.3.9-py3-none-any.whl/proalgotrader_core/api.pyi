from _typeshed import Incomplete
from proalgotrader_core.args_manager import ArgsManager as ArgsManager
from typing import Any, Dict

class Api:
    args_manager: Incomplete
    algo_session_key: Incomplete
    algo_session_secret: Incomplete
    environment: Incomplete
    api_url: Incomplete
    ws_url: Incomplete
    headers: Incomplete
    token: Incomplete
    def __init__(self, args_manager: ArgsManager) -> None: ...
    def get_algo_session_info(self) -> Any: ...
    def get_github_access_token(self, github_account_id: int) -> Any: ...
    def get_trading_days(self) -> Any: ...
    def get_base_symbols(self) -> Any: ...
    def get_broker_symbols(self, broker_title: str, payload: Dict[str, Any] | None = None) -> Any: ...
    def get_orders(self) -> Any: ...
    def get_trades(self) -> Any: ...
    def get_positions(self) -> Any: ...
    async def create_order(self, payload: Dict[str, Any] | None = None) -> Any: ...
    async def enter_position(self, payload: Dict[str, Any] | None = None) -> Any: ...
    async def exit_position(self, payload: Dict[str, Any] | None = None) -> Any: ...
    def get_risk_reward(self, position_id: str, payload: Dict[str, Any] | None = None) -> Any: ...
    def create_risk_reward(self, position_id: str, payload: Dict[str, Any] | None = None) -> Any: ...
