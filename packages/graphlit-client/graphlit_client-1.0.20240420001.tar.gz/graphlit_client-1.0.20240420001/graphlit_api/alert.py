# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    AlertTypes,
    ContentPublishingServiceTypes,
    ContentTypes,
    ElevenLabsModels,
    EntityState,
    FileTypes,
    IntegrationServiceTypes,
    ObservableTypes,
)


class Alert(BaseModel):
    alert: Optional["AlertAlert"]


class AlertAlert(BaseModel):
    id: str
    name: str
    creation_date: Any = Field(alias="creationDate")
    owner: "AlertAlertOwner"
    state: EntityState
    correlation_id: Optional[str] = Field(alias="correlationId")
    type: AlertTypes
    summary_prompt: Optional[str] = Field(alias="summaryPrompt")
    publish_prompt: str = Field(alias="publishPrompt")
    filter: Optional["AlertAlertFilter"]
    integration: "AlertAlertIntegration"
    publishing: "AlertAlertPublishing"
    summary_specification: Optional["AlertAlertSummarySpecification"] = Field(
        alias="summarySpecification"
    )
    publish_specification: Optional["AlertAlertPublishSpecification"] = Field(
        alias="publishSpecification"
    )
    last_alert_date: Optional[Any] = Field(alias="lastAlertDate")


class AlertAlertOwner(BaseModel):
    id: str


class AlertAlertFilter(BaseModel):
    date_range: Optional["AlertAlertFilterDateRange"] = Field(alias="dateRange")
    creation_date_range: Optional["AlertAlertFilterCreationDateRange"] = Field(
        alias="creationDateRange"
    )
    types: Optional[List[ContentTypes]]
    file_types: Optional[List[Optional[FileTypes]]] = Field(alias="fileTypes")
    contents: Optional[List["AlertAlertFilterContents"]]
    feeds: Optional[List["AlertAlertFilterFeeds"]]
    workflows: Optional[List["AlertAlertFilterWorkflows"]]
    collections: Optional[List["AlertAlertFilterCollections"]]
    observations: Optional[List["AlertAlertFilterObservations"]]


class AlertAlertFilterDateRange(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AlertAlertFilterCreationDateRange(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class AlertAlertFilterContents(BaseModel):
    id: str


class AlertAlertFilterFeeds(BaseModel):
    id: str


class AlertAlertFilterWorkflows(BaseModel):
    id: str


class AlertAlertFilterCollections(BaseModel):
    id: str


class AlertAlertFilterObservations(BaseModel):
    type: ObservableTypes
    observable: "AlertAlertFilterObservationsObservable"
    states: Optional[List[Optional[EntityState]]]


class AlertAlertFilterObservationsObservable(BaseModel):
    id: str


class AlertAlertIntegration(BaseModel):
    type: IntegrationServiceTypes
    uri: Optional[str]
    slack: Optional["AlertAlertIntegrationSlack"]


class AlertAlertIntegrationSlack(BaseModel):
    token: str
    channel: str


class AlertAlertPublishing(BaseModel):
    type: ContentPublishingServiceTypes
    eleven_labs: Optional["AlertAlertPublishingElevenLabs"] = Field(alias="elevenLabs")


class AlertAlertPublishingElevenLabs(BaseModel):
    model: Optional[ElevenLabsModels]
    voice: Optional[str]


class AlertAlertSummarySpecification(BaseModel):
    id: str


class AlertAlertPublishSpecification(BaseModel):
    id: str


Alert.model_rebuild()
AlertAlert.model_rebuild()
AlertAlertFilter.model_rebuild()
AlertAlertFilterObservations.model_rebuild()
AlertAlertIntegration.model_rebuild()
AlertAlertPublishing.model_rebuild()
