# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import EntityState, EnvironmentTypes, ResourceConnectorTypes


class Project(BaseModel):
    project: Optional["ProjectProject"]


class ProjectProject(BaseModel):
    id: str
    name: str
    creation_date: Any = Field(alias="creationDate")
    modified_date: Optional[Any] = Field(alias="modifiedDate")
    state: EntityState
    environment_type: Optional[EnvironmentTypes] = Field(alias="environmentType")
    platform: Optional[ResourceConnectorTypes]
    region: Optional[str]
    workflow: Optional["ProjectProjectWorkflow"]
    specification: Optional["ProjectProjectSpecification"]
    quota: Optional["ProjectProjectQuota"]
    callback_uri: Optional[Any] = Field(alias="callbackUri")


class ProjectProjectWorkflow(BaseModel):
    id: str
    name: str


class ProjectProjectSpecification(BaseModel):
    id: str
    name: str


class ProjectProjectQuota(BaseModel):
    storage: Optional[int]
    contents: Optional[int]
    feeds: Optional[int]
    posts: Optional[int]
    conversations: Optional[int]


Project.model_rebuild()
ProjectProject.model_rebuild()
