# Generated by ariadne-codegen
# Source: ./documents

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel
from .enums import (
    ContentTypes,
    ConversationRoleTypes,
    ConversationTypes,
    EntityState,
    FileTypes,
    ModelServiceTypes,
    ObservableTypes,
)


class Conversation(BaseModel):
    conversation: Optional["ConversationConversation"]


class ConversationConversation(BaseModel):
    id: str
    name: str
    creation_date: Any = Field(alias="creationDate")
    owner: "ConversationConversationOwner"
    state: EntityState
    correlation_id: Optional[str] = Field(alias="correlationId")
    type: Optional[ConversationTypes]
    messages: Optional[List[Optional["ConversationConversationMessages"]]]
    specification: Optional["ConversationConversationSpecification"]
    filter: Optional["ConversationConversationFilter"]


class ConversationConversationOwner(BaseModel):
    id: str


class ConversationConversationMessages(BaseModel):
    role: ConversationRoleTypes
    author: Optional[str]
    message: str
    citations: Optional[List[Optional["ConversationConversationMessagesCitations"]]]
    tokens: int
    throughput: Optional[float]
    completion_time: Optional[Any] = Field(alias="completionTime")
    timestamp: Any
    model_service: Optional[ModelServiceTypes] = Field(alias="modelService")
    model: Optional[str]


class ConversationConversationMessagesCitations(BaseModel):
    content: Optional["ConversationConversationMessagesCitationsContent"]
    index: Optional[int]
    text: Optional[str]
    start_time: Optional[Any] = Field(alias="startTime")
    end_time: Optional[Any] = Field(alias="endTime")
    page_number: Optional[int] = Field(alias="pageNumber")
    frame_number: Optional[int] = Field(alias="frameNumber")


class ConversationConversationMessagesCitationsContent(BaseModel):
    id: str


class ConversationConversationSpecification(BaseModel):
    id: str
    name: str


class ConversationConversationFilter(BaseModel):
    date_range: Optional["ConversationConversationFilterDateRange"] = Field(
        alias="dateRange"
    )
    creation_date_range: Optional["ConversationConversationFilterCreationDateRange"] = (
        Field(alias="creationDateRange")
    )
    types: Optional[List[ContentTypes]]
    file_types: Optional[List[Optional[FileTypes]]] = Field(alias="fileTypes")
    contents: Optional[List["ConversationConversationFilterContents"]]
    feeds: Optional[List["ConversationConversationFilterFeeds"]]
    workflows: Optional[List["ConversationConversationFilterWorkflows"]]
    collections: Optional[List["ConversationConversationFilterCollections"]]
    observations: Optional[List["ConversationConversationFilterObservations"]]


class ConversationConversationFilterDateRange(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class ConversationConversationFilterCreationDateRange(BaseModel):
    from_: Optional[Any] = Field(alias="from")
    to: Optional[Any]


class ConversationConversationFilterContents(BaseModel):
    id: str


class ConversationConversationFilterFeeds(BaseModel):
    id: str


class ConversationConversationFilterWorkflows(BaseModel):
    id: str


class ConversationConversationFilterCollections(BaseModel):
    id: str


class ConversationConversationFilterObservations(BaseModel):
    type: ObservableTypes
    observable: "ConversationConversationFilterObservationsObservable"
    states: Optional[List[Optional[EntityState]]]


class ConversationConversationFilterObservationsObservable(BaseModel):
    id: str


Conversation.model_rebuild()
ConversationConversation.model_rebuild()
ConversationConversationMessages.model_rebuild()
ConversationConversationMessagesCitations.model_rebuild()
ConversationConversationFilter.model_rebuild()
ConversationConversationFilterObservations.model_rebuild()
