# coding: utf-8

"""
    Command Center operations

    Command Center operations  # noqa: E501

    OpenAPI spec version: 23.03-sp1
    Contact: support@zadarastorage.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six

from CommandCenter.configuration import Configuration


class InlineResponse20091Vpsas(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'int',
        'name': 'str',
        'internal_name': 'str',
        'user': 'str',
        'cloud_user_internal_id': 'int',
        'status': 'str',
        'redundancy_status': 'str',
        'management_address_ipv6': 'str',
        'management_address_netmask': 'str',
        'engine_type': 'str',
        'app_engine_type': 'str',
        'drives': 'int',
        'cache': 'int',
        'image': 'str',
        'management_address': 'str',
        'public_ip': 'str',
        'public_ip_netmask': 'str',
        'network_configuration': 'InlineResponse20091NetworkConfiguration',
        'active_vc_index': 'int',
        'fibre_channel_details': 'object',
        'storage_type': 'str',
        'data_reduction_bundle': 'bool',
        'uuid': 'str',
        'flc_enabled': 'bool',
        'iscsi_dual_target': 'bool',
        'snmp_engine_id': 'str',
        'created_at': 'str',
        'updated_at': 'str',
        'used_by_volumes_capacity': 'str',
        'effective_capacity': 'str',
        'provisioned_capacity': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'internal_name': 'internal_name',
        'user': 'user',
        'cloud_user_internal_id': 'cloud_user_internal_id',
        'status': 'status',
        'redundancy_status': 'redundancy_status',
        'management_address_ipv6': 'management_address_ipv6',
        'management_address_netmask': 'management_address_netmask',
        'engine_type': 'engine_type',
        'app_engine_type': 'app_engine_type',
        'drives': 'drives',
        'cache': 'cache',
        'image': 'image',
        'management_address': 'management_address',
        'public_ip': 'public_ip',
        'public_ip_netmask': 'public_ip_netmask',
        'network_configuration': 'network_configuration',
        'active_vc_index': 'active_vc_index',
        'fibre_channel_details': 'fibre_channel_details',
        'storage_type': 'storage_type',
        'data_reduction_bundle': 'data_reduction_bundle',
        'uuid': 'uuid',
        'flc_enabled': 'flc_enabled',
        'iscsi_dual_target': 'iscsi_dual_target',
        'snmp_engine_id': 'snmp_engine_id',
        'created_at': 'created_at',
        'updated_at': 'updated_at',
        'used_by_volumes_capacity': 'used_by_volumes_capacity',
        'effective_capacity': 'effective_capacity',
        'provisioned_capacity': 'provisioned_capacity'
    }

    def __init__(self, id=None, name=None, internal_name=None, user=None, cloud_user_internal_id=None, status=None, redundancy_status=None, management_address_ipv6=None, management_address_netmask=None, engine_type=None, app_engine_type=None, drives=None, cache=None, image=None, management_address=None, public_ip=None, public_ip_netmask=None, network_configuration=None, active_vc_index=None, fibre_channel_details=None, storage_type=None, data_reduction_bundle=None, uuid=None, flc_enabled=None, iscsi_dual_target=None, snmp_engine_id=None, created_at=None, updated_at=None, used_by_volumes_capacity=None, effective_capacity=None, provisioned_capacity=None, _configuration=None):  # noqa: E501
        """InlineResponse20091Vpsas - a model defined in Swagger"""  # noqa: E501
        if _configuration is None:
            _configuration = Configuration()
        self._configuration = _configuration

        self._id = None
        self._name = None
        self._internal_name = None
        self._user = None
        self._cloud_user_internal_id = None
        self._status = None
        self._redundancy_status = None
        self._management_address_ipv6 = None
        self._management_address_netmask = None
        self._engine_type = None
        self._app_engine_type = None
        self._drives = None
        self._cache = None
        self._image = None
        self._management_address = None
        self._public_ip = None
        self._public_ip_netmask = None
        self._network_configuration = None
        self._active_vc_index = None
        self._fibre_channel_details = None
        self._storage_type = None
        self._data_reduction_bundle = None
        self._uuid = None
        self._flc_enabled = None
        self._iscsi_dual_target = None
        self._snmp_engine_id = None
        self._created_at = None
        self._updated_at = None
        self._used_by_volumes_capacity = None
        self._effective_capacity = None
        self._provisioned_capacity = None
        self.discriminator = None

        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if internal_name is not None:
            self.internal_name = internal_name
        if user is not None:
            self.user = user
        if cloud_user_internal_id is not None:
            self.cloud_user_internal_id = cloud_user_internal_id
        if status is not None:
            self.status = status
        if redundancy_status is not None:
            self.redundancy_status = redundancy_status
        if management_address_ipv6 is not None:
            self.management_address_ipv6 = management_address_ipv6
        if management_address_netmask is not None:
            self.management_address_netmask = management_address_netmask
        if engine_type is not None:
            self.engine_type = engine_type
        if app_engine_type is not None:
            self.app_engine_type = app_engine_type
        if drives is not None:
            self.drives = drives
        if cache is not None:
            self.cache = cache
        if image is not None:
            self.image = image
        if management_address is not None:
            self.management_address = management_address
        if public_ip is not None:
            self.public_ip = public_ip
        if public_ip_netmask is not None:
            self.public_ip_netmask = public_ip_netmask
        if network_configuration is not None:
            self.network_configuration = network_configuration
        if active_vc_index is not None:
            self.active_vc_index = active_vc_index
        if fibre_channel_details is not None:
            self.fibre_channel_details = fibre_channel_details
        if storage_type is not None:
            self.storage_type = storage_type
        if data_reduction_bundle is not None:
            self.data_reduction_bundle = data_reduction_bundle
        if uuid is not None:
            self.uuid = uuid
        if flc_enabled is not None:
            self.flc_enabled = flc_enabled
        if iscsi_dual_target is not None:
            self.iscsi_dual_target = iscsi_dual_target
        if snmp_engine_id is not None:
            self.snmp_engine_id = snmp_engine_id
        if created_at is not None:
            self.created_at = created_at
        if updated_at is not None:
            self.updated_at = updated_at
        if used_by_volumes_capacity is not None:
            self.used_by_volumes_capacity = used_by_volumes_capacity
        if effective_capacity is not None:
            self.effective_capacity = effective_capacity
        if provisioned_capacity is not None:
            self.provisioned_capacity = provisioned_capacity

    @property
    def id(self):
        """Gets the id of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The id of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20091Vpsas.


        :param id: The id of this InlineResponse20091Vpsas.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The name of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20091Vpsas.


        :param name: The name of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def internal_name(self):
        """Gets the internal_name of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The internal_name of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._internal_name

    @internal_name.setter
    def internal_name(self, internal_name):
        """Sets the internal_name of this InlineResponse20091Vpsas.


        :param internal_name: The internal_name of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._internal_name = internal_name

    @property
    def user(self):
        """Gets the user of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The user of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this InlineResponse20091Vpsas.


        :param user: The user of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._user = user

    @property
    def cloud_user_internal_id(self):
        """Gets the cloud_user_internal_id of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The cloud_user_internal_id of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: int
        """
        return self._cloud_user_internal_id

    @cloud_user_internal_id.setter
    def cloud_user_internal_id(self, cloud_user_internal_id):
        """Sets the cloud_user_internal_id of this InlineResponse20091Vpsas.


        :param cloud_user_internal_id: The cloud_user_internal_id of this InlineResponse20091Vpsas.  # noqa: E501
        :type: int
        """

        self._cloud_user_internal_id = cloud_user_internal_id

    @property
    def status(self):
        """Gets the status of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The status of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse20091Vpsas.


        :param status: The status of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def redundancy_status(self):
        """Gets the redundancy_status of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The redundancy_status of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._redundancy_status

    @redundancy_status.setter
    def redundancy_status(self, redundancy_status):
        """Sets the redundancy_status of this InlineResponse20091Vpsas.


        :param redundancy_status: The redundancy_status of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._redundancy_status = redundancy_status

    @property
    def management_address_ipv6(self):
        """Gets the management_address_ipv6 of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The management_address_ipv6 of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._management_address_ipv6

    @management_address_ipv6.setter
    def management_address_ipv6(self, management_address_ipv6):
        """Sets the management_address_ipv6 of this InlineResponse20091Vpsas.


        :param management_address_ipv6: The management_address_ipv6 of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._management_address_ipv6 = management_address_ipv6

    @property
    def management_address_netmask(self):
        """Gets the management_address_netmask of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The management_address_netmask of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._management_address_netmask

    @management_address_netmask.setter
    def management_address_netmask(self, management_address_netmask):
        """Sets the management_address_netmask of this InlineResponse20091Vpsas.


        :param management_address_netmask: The management_address_netmask of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._management_address_netmask = management_address_netmask

    @property
    def engine_type(self):
        """Gets the engine_type of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The engine_type of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._engine_type

    @engine_type.setter
    def engine_type(self, engine_type):
        """Sets the engine_type of this InlineResponse20091Vpsas.


        :param engine_type: The engine_type of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._engine_type = engine_type

    @property
    def app_engine_type(self):
        """Gets the app_engine_type of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The app_engine_type of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._app_engine_type

    @app_engine_type.setter
    def app_engine_type(self, app_engine_type):
        """Sets the app_engine_type of this InlineResponse20091Vpsas.


        :param app_engine_type: The app_engine_type of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._app_engine_type = app_engine_type

    @property
    def drives(self):
        """Gets the drives of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The drives of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: int
        """
        return self._drives

    @drives.setter
    def drives(self, drives):
        """Sets the drives of this InlineResponse20091Vpsas.


        :param drives: The drives of this InlineResponse20091Vpsas.  # noqa: E501
        :type: int
        """

        self._drives = drives

    @property
    def cache(self):
        """Gets the cache of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The cache of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: int
        """
        return self._cache

    @cache.setter
    def cache(self, cache):
        """Sets the cache of this InlineResponse20091Vpsas.


        :param cache: The cache of this InlineResponse20091Vpsas.  # noqa: E501
        :type: int
        """

        self._cache = cache

    @property
    def image(self):
        """Gets the image of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The image of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this InlineResponse20091Vpsas.


        :param image: The image of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._image = image

    @property
    def management_address(self):
        """Gets the management_address of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The management_address of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._management_address

    @management_address.setter
    def management_address(self, management_address):
        """Sets the management_address of this InlineResponse20091Vpsas.


        :param management_address: The management_address of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._management_address = management_address

    @property
    def public_ip(self):
        """Gets the public_ip of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The public_ip of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._public_ip

    @public_ip.setter
    def public_ip(self, public_ip):
        """Sets the public_ip of this InlineResponse20091Vpsas.


        :param public_ip: The public_ip of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._public_ip = public_ip

    @property
    def public_ip_netmask(self):
        """Gets the public_ip_netmask of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The public_ip_netmask of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._public_ip_netmask

    @public_ip_netmask.setter
    def public_ip_netmask(self, public_ip_netmask):
        """Sets the public_ip_netmask of this InlineResponse20091Vpsas.


        :param public_ip_netmask: The public_ip_netmask of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._public_ip_netmask = public_ip_netmask

    @property
    def network_configuration(self):
        """Gets the network_configuration of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The network_configuration of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: InlineResponse20091NetworkConfiguration
        """
        return self._network_configuration

    @network_configuration.setter
    def network_configuration(self, network_configuration):
        """Sets the network_configuration of this InlineResponse20091Vpsas.


        :param network_configuration: The network_configuration of this InlineResponse20091Vpsas.  # noqa: E501
        :type: InlineResponse20091NetworkConfiguration
        """

        self._network_configuration = network_configuration

    @property
    def active_vc_index(self):
        """Gets the active_vc_index of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The active_vc_index of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: int
        """
        return self._active_vc_index

    @active_vc_index.setter
    def active_vc_index(self, active_vc_index):
        """Sets the active_vc_index of this InlineResponse20091Vpsas.


        :param active_vc_index: The active_vc_index of this InlineResponse20091Vpsas.  # noqa: E501
        :type: int
        """

        self._active_vc_index = active_vc_index

    @property
    def fibre_channel_details(self):
        """Gets the fibre_channel_details of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The fibre_channel_details of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: object
        """
        return self._fibre_channel_details

    @fibre_channel_details.setter
    def fibre_channel_details(self, fibre_channel_details):
        """Sets the fibre_channel_details of this InlineResponse20091Vpsas.


        :param fibre_channel_details: The fibre_channel_details of this InlineResponse20091Vpsas.  # noqa: E501
        :type: object
        """

        self._fibre_channel_details = fibre_channel_details

    @property
    def storage_type(self):
        """Gets the storage_type of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The storage_type of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._storage_type

    @storage_type.setter
    def storage_type(self, storage_type):
        """Sets the storage_type of this InlineResponse20091Vpsas.


        :param storage_type: The storage_type of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._storage_type = storage_type

    @property
    def data_reduction_bundle(self):
        """Gets the data_reduction_bundle of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The data_reduction_bundle of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: bool
        """
        return self._data_reduction_bundle

    @data_reduction_bundle.setter
    def data_reduction_bundle(self, data_reduction_bundle):
        """Sets the data_reduction_bundle of this InlineResponse20091Vpsas.


        :param data_reduction_bundle: The data_reduction_bundle of this InlineResponse20091Vpsas.  # noqa: E501
        :type: bool
        """

        self._data_reduction_bundle = data_reduction_bundle

    @property
    def uuid(self):
        """Gets the uuid of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The uuid of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this InlineResponse20091Vpsas.


        :param uuid: The uuid of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._uuid = uuid

    @property
    def flc_enabled(self):
        """Gets the flc_enabled of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The flc_enabled of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: bool
        """
        return self._flc_enabled

    @flc_enabled.setter
    def flc_enabled(self, flc_enabled):
        """Sets the flc_enabled of this InlineResponse20091Vpsas.


        :param flc_enabled: The flc_enabled of this InlineResponse20091Vpsas.  # noqa: E501
        :type: bool
        """

        self._flc_enabled = flc_enabled

    @property
    def iscsi_dual_target(self):
        """Gets the iscsi_dual_target of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The iscsi_dual_target of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: bool
        """
        return self._iscsi_dual_target

    @iscsi_dual_target.setter
    def iscsi_dual_target(self, iscsi_dual_target):
        """Sets the iscsi_dual_target of this InlineResponse20091Vpsas.


        :param iscsi_dual_target: The iscsi_dual_target of this InlineResponse20091Vpsas.  # noqa: E501
        :type: bool
        """

        self._iscsi_dual_target = iscsi_dual_target

    @property
    def snmp_engine_id(self):
        """Gets the snmp_engine_id of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The snmp_engine_id of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._snmp_engine_id

    @snmp_engine_id.setter
    def snmp_engine_id(self, snmp_engine_id):
        """Sets the snmp_engine_id of this InlineResponse20091Vpsas.


        :param snmp_engine_id: The snmp_engine_id of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._snmp_engine_id = snmp_engine_id

    @property
    def created_at(self):
        """Gets the created_at of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The created_at of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InlineResponse20091Vpsas.


        :param created_at: The created_at of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def updated_at(self):
        """Gets the updated_at of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The updated_at of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this InlineResponse20091Vpsas.


        :param updated_at: The updated_at of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._updated_at = updated_at

    @property
    def used_by_volumes_capacity(self):
        """Gets the used_by_volumes_capacity of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The used_by_volumes_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._used_by_volumes_capacity

    @used_by_volumes_capacity.setter
    def used_by_volumes_capacity(self, used_by_volumes_capacity):
        """Sets the used_by_volumes_capacity of this InlineResponse20091Vpsas.


        :param used_by_volumes_capacity: The used_by_volumes_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._used_by_volumes_capacity = used_by_volumes_capacity

    @property
    def effective_capacity(self):
        """Gets the effective_capacity of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The effective_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._effective_capacity

    @effective_capacity.setter
    def effective_capacity(self, effective_capacity):
        """Sets the effective_capacity of this InlineResponse20091Vpsas.


        :param effective_capacity: The effective_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._effective_capacity = effective_capacity

    @property
    def provisioned_capacity(self):
        """Gets the provisioned_capacity of this InlineResponse20091Vpsas.  # noqa: E501


        :return: The provisioned_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :rtype: str
        """
        return self._provisioned_capacity

    @provisioned_capacity.setter
    def provisioned_capacity(self, provisioned_capacity):
        """Sets the provisioned_capacity of this InlineResponse20091Vpsas.


        :param provisioned_capacity: The provisioned_capacity of this InlineResponse20091Vpsas.  # noqa: E501
        :type: str
        """

        self._provisioned_capacity = provisioned_capacity

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20091Vpsas, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20091Vpsas):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, InlineResponse20091Vpsas):
            return True

        return self.to_dict() != other.to_dict()
