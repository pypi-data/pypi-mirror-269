Metadata-Version: 2.1
Name: poggydev
Version: 0.0.2
Summary: ðŸ‘„ Poggy.py is a Python library for interacting with the Voice API
Home-page: https://code.poggy.dev
Author: Poggy.py Developers
Author-email: poggy-bot@lists.poggy.dev
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.6
Description-Content-Type: text/markdown

# ðŸ‘„ Poggy
> "Create an assistant using Poggy Voice API?, it's easy!" - Piero Molino
## ðŸ“– Description of Package
Poggy is a Python package that allows you interact with the Poggy Voice API., In this package, you can create an assistant or a virtual assistant using the Poggy Voice API. just follow the steps below:
## ðŸ“¦ Installation
To install the package, you can use pip:
```
pip install poggy
# or donation:
pip install poggy-donate-sdk # if you want to donate
```
## ðŸ“„ Note:
If you want to use the donation version, you must have an Key and Secret in the Poggy Voice API SDK, Example:
```py
from poggy.console import PoggyDonate
from poggy import Voice
print(PoggyDonate.get_donate_info()) # >> "Your donation is: 0.00"
# Checkout:
print(PoggyDonate.checkout(amount=1.00)) # >> "Your donation link: https://checkout.stripe.com/c/pay/cs_test_a1V2VZPZb2O5a5d7dK1e0V1Zb2O5a5d7dK1e0V1Zb2O5a5d7dK1e0V1Zb2O5a5d7..."
# Error:
class MyVoiceAssistant(PoggyDonate):
   system_name = "My Voice Assistant"
   system_id = "my-voice-assistant"
   voice = Voice()
   def __init__(self):
      super().__init__()
      self.voice.say("Hello, I'm My Voice Assistant")
# Output:
# DonateError: Uh oh, you don't have any donation to use this class
```
ðŸ‘„ Poggy will stop speak if you don't have any donation.
## ðŸ‘„ Usage
### ðŸ“„ Create an assistant
```py
from poggy import Voice
from poggy.console import PoggyHTML, PoggyState

class MyVoiceAssistant(PoggyHTML):
   voice = Voice()
   voiceState
   def __init__(self):
      super().__init__()
      self.html_title = "My Voice Assistant"
      self.voiceState.microphone = True
      self.voiceState.voice = "en-US-JennyNeural"
      self.voiceState.voice_name = "Jenny"
if __name__ == "__main__":
   MyVoiceAssistant().run()
```
