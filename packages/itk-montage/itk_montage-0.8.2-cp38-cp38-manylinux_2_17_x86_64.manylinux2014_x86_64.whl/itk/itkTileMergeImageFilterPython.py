# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTileMergeImageFilterPython
else:
    import _itkTileMergeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkContinuousIndexPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkTranslationTransformPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTileMontagePython
import itk.itkPhaseCorrelationImageRegistrationMethodPython
import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhaseCorrelationOptimizerPython

def itkTileMergeImageFilterID2_New():
    return itkTileMergeImageFilterID2.New()

class itkTileMergeImageFilterID2(itk.itkTileMontagePython.itkTileMontageID2F):
    r"""Proxy of C++ itkTileMergeImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD2
        GetOutput(self) -> itkImageD2
        GetOutput(self, idx) -> itkImageD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageD2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID2

        Create a new object of the class itkTileMergeImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID2_swigregister(itkTileMergeImageFilterID2)

def itkTileMergeImageFilterID3_New():
    return itkTileMergeImageFilterID3.New()

class itkTileMergeImageFilterID3(itk.itkTileMontagePython.itkTileMontageID3F):
    r"""Proxy of C++ itkTileMergeImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD3
        GetOutput(self) -> itkImageD3
        GetOutput(self, idx) -> itkImageD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageD3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID3

        Create a new object of the class itkTileMergeImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID3_swigregister(itkTileMergeImageFilterID3)

def itkTileMergeImageFilterID4_New():
    return itkTileMergeImageFilterID4.New()

class itkTileMergeImageFilterID4(itk.itkTileMontagePython.itkTileMontageID4F):
    r"""Proxy of C++ itkTileMergeImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterID4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterID4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageID4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageD4
        GetOutput(self) -> itkImageD4
        GetOutput(self, idx) -> itkImageD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageD4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> double"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterID4

        Create a new object of the class itkTileMergeImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterID4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterID4_swigregister(itkTileMergeImageFilterID4)

def itkTileMergeImageFilterIF2_New():
    return itkTileMergeImageFilterIF2.New()

class itkTileMergeImageFilterIF2(itk.itkTileMontagePython.itkTileMontageIF2F):
    r"""Proxy of C++ itkTileMergeImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF2
        GetOutput(self) -> itkImageF2
        GetOutput(self, idx) -> itkImageF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageF2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF2

        Create a new object of the class itkTileMergeImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF2_swigregister(itkTileMergeImageFilterIF2)

def itkTileMergeImageFilterIF3_New():
    return itkTileMergeImageFilterIF3.New()

class itkTileMergeImageFilterIF3(itk.itkTileMontagePython.itkTileMontageIF3F):
    r"""Proxy of C++ itkTileMergeImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF3
        GetOutput(self) -> itkImageF3
        GetOutput(self, idx) -> itkImageF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageF3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF3

        Create a new object of the class itkTileMergeImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF3_swigregister(itkTileMergeImageFilterIF3)

def itkTileMergeImageFilterIF4_New():
    return itkTileMergeImageFilterIF4.New()

class itkTileMergeImageFilterIF4(itk.itkTileMontagePython.itkTileMontageIF4F):
    r"""Proxy of C++ itkTileMergeImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIF4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIF4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIF4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageF4
        GetOutput(self) -> itkImageF4
        GetOutput(self, idx) -> itkImageF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageF4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> float"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIF4

        Create a new object of the class itkTileMergeImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIF4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIF4_swigregister(itkTileMergeImageFilterIF4)

def itkTileMergeImageFilterIRGBAUC2_New():
    return itkTileMergeImageFilterIRGBAUC2.New()

class itkTileMergeImageFilterIRGBAUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self) -> itkImageRGBAUC2
        GetOutput(self, idx) -> itkImageRGBAUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBAUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC2

        Create a new object of the class itkTileMergeImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC2_swigregister(itkTileMergeImageFilterIRGBAUC2)

def itkTileMergeImageFilterIRGBAUC3_New():
    return itkTileMergeImageFilterIRGBAUC3.New()

class itkTileMergeImageFilterIRGBAUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self) -> itkImageRGBAUC3
        GetOutput(self, idx) -> itkImageRGBAUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBAUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC3

        Create a new object of the class itkTileMergeImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC3_swigregister(itkTileMergeImageFilterIRGBAUC3)

def itkTileMergeImageFilterIRGBAUC4_New():
    return itkTileMergeImageFilterIRGBAUC4.New()

class itkTileMergeImageFilterIRGBAUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBAUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBAUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self) -> itkImageRGBAUC4
        GetOutput(self, idx) -> itkImageRGBAUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBAUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBAUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBAPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBAPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBAUC4

        Create a new object of the class itkTileMergeImageFilterIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBAUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBAUC4_swigregister(itkTileMergeImageFilterIRGBAUC4)

def itkTileMergeImageFilterIRGBUC2_New():
    return itkTileMergeImageFilterIRGBUC2.New()

class itkTileMergeImageFilterIRGBUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self) -> itkImageRGBUC2
        GetOutput(self, idx) -> itkImageRGBUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageRGBUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC2

        Create a new object of the class itkTileMergeImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC2_swigregister(itkTileMergeImageFilterIRGBUC2)

def itkTileMergeImageFilterIRGBUC3_New():
    return itkTileMergeImageFilterIRGBUC3.New()

class itkTileMergeImageFilterIRGBUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self) -> itkImageRGBUC3
        GetOutput(self, idx) -> itkImageRGBUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageRGBUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC3

        Create a new object of the class itkTileMergeImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC3_swigregister(itkTileMergeImageFilterIRGBUC3)

def itkTileMergeImageFilterIRGBUC4_New():
    return itkTileMergeImageFilterIRGBUC4.New()

class itkTileMergeImageFilterIRGBUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIRGBUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIRGBUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self) -> itkImageRGBUC4
        GetOutput(self, idx) -> itkImageRGBUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageRGBUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageRGBUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> itkRGBPixelUC"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIRGBUC4

        Create a new object of the class itkTileMergeImageFilterIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIRGBUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIRGBUC4_swigregister(itkTileMergeImageFilterIRGBUC4)

def itkTileMergeImageFilterISS2_New():
    return itkTileMergeImageFilterISS2.New()

class itkTileMergeImageFilterISS2(itk.itkTileMontagePython.itkTileMontageISS2F):
    r"""Proxy of C++ itkTileMergeImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS2
        GetOutput(self) -> itkImageSS2
        GetOutput(self, idx) -> itkImageSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageSS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS2

        Create a new object of the class itkTileMergeImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS2_swigregister(itkTileMergeImageFilterISS2)

def itkTileMergeImageFilterISS3_New():
    return itkTileMergeImageFilterISS3.New()

class itkTileMergeImageFilterISS3(itk.itkTileMontagePython.itkTileMontageISS3F):
    r"""Proxy of C++ itkTileMergeImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS3
        GetOutput(self) -> itkImageSS3
        GetOutput(self, idx) -> itkImageSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageSS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS3

        Create a new object of the class itkTileMergeImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS3_swigregister(itkTileMergeImageFilterISS3)

def itkTileMergeImageFilterISS4_New():
    return itkTileMergeImageFilterISS4.New()

class itkTileMergeImageFilterISS4(itk.itkTileMontagePython.itkTileMontageISS4F):
    r"""Proxy of C++ itkTileMergeImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterISS4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterISS4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageISS4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageSS4
        GetOutput(self) -> itkImageSS4
        GetOutput(self, idx) -> itkImageSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageSS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterISS4

        Create a new object of the class itkTileMergeImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterISS4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterISS4_swigregister(itkTileMergeImageFilterISS4)

def itkTileMergeImageFilterIUC2_New():
    return itkTileMergeImageFilterIUC2.New()

class itkTileMergeImageFilterIUC2(itk.itkTileMontagePython.itkTileMontageIUC2F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC2
        GetOutput(self) -> itkImageUC2
        GetOutput(self, idx) -> itkImageUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC2

        Create a new object of the class itkTileMergeImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC2_swigregister(itkTileMergeImageFilterIUC2)

def itkTileMergeImageFilterIUC3_New():
    return itkTileMergeImageFilterIUC3.New()

class itkTileMergeImageFilterIUC3(itk.itkTileMontagePython.itkTileMontageIUC3F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC3
        GetOutput(self) -> itkImageUC3
        GetOutput(self, idx) -> itkImageUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC3

        Create a new object of the class itkTileMergeImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC3_swigregister(itkTileMergeImageFilterIUC3)

def itkTileMergeImageFilterIUC4_New():
    return itkTileMergeImageFilterIUC4.New()

class itkTileMergeImageFilterIUC4(itk.itkTileMontagePython.itkTileMontageIUC4F):
    r"""Proxy of C++ itkTileMergeImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUC4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUC4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUC4
        GetOutput(self) -> itkImageUC4
        GetOutput(self, idx) -> itkImageUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned char"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUC4

        Create a new object of the class itkTileMergeImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUC4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUC4_swigregister(itkTileMergeImageFilterIUC4)

def itkTileMergeImageFilterIUS2_New():
    return itkTileMergeImageFilterIUS2.New()

class itkTileMergeImageFilterIUS2(itk.itkTileMontagePython.itkTileMontageIUS2F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS2_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS2F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS2
        GetOutput(self) -> itkImageUS2
        GetOutput(self, idx) -> itkImageUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize2
        transform: itkTranslationTransformD2 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS2

        Create a new object of the class itkTileMergeImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS2 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS2_swigregister(itkTileMergeImageFilterIUS2)

def itkTileMergeImageFilterIUS3_New():
    return itkTileMergeImageFilterIUS3.New()

class itkTileMergeImageFilterIUS3(itk.itkTileMontagePython.itkTileMontageIUS3F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS3_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS3F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS3
        GetOutput(self) -> itkImageUS3
        GetOutput(self, idx) -> itkImageUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize3
        transform: itkTranslationTransformD3 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS3

        Create a new object of the class itkTileMergeImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS3 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS3_swigregister(itkTileMergeImageFilterIUS3)

def itkTileMergeImageFilterIUS4_New():
    return itkTileMergeImageFilterIUS4.New()

class itkTileMergeImageFilterIUS4(itk.itkTileMontagePython.itkTileMontageIUS4F):
    r"""Proxy of C++ itkTileMergeImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMergeImageFilterIUS4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMergeImageFilterIUS4_Pointer"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_Clone(self)

    def SetMontage(self, montage):
        r"""
        SetMontage(self, montage)

        Parameters
        ----------
        montage: itkTileMontageIUS4F const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetMontage(self, montage)

    def SetReleaseDataBeforeUpdateFlag(self, flag):
        r"""
        SetReleaseDataBeforeUpdateFlag(self, flag)

        Parameters
        ----------
        flag: bool const

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetReleaseDataBeforeUpdateFlag(self, flag)

    def GetOutput(self, *args):
        r"""
        GetOutput(self) -> itkImageUS4
        GetOutput(self) -> itkImageUS4
        GetOutput(self, idx) -> itkImageUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetOutput(self, *args)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetInputTile(self, *args)

    def SetTileTransform(self, position, transform):
        r"""
        SetTileTransform(self, position, transform)

        Parameters
        ----------
        position: itkSize4
        transform: itkTranslationTransformD4 const *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetTileTransform(self, position, transform)

    def SetBackground(self, _arg):
        r"""
        SetBackground(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetBackground(self, _arg)

    def GetBackground(self):
        r"""GetBackground(self) -> unsigned short"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetBackground(self)

    def SetCropToFill(self, _arg):
        r"""
        SetCropToFill(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_SetCropToFill(self, _arg)

    def GetCropToFill(self):
        r"""GetCropToFill(self) -> bool"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_GetCropToFill(self)

    def CropToFillOn(self):
        r"""CropToFillOn(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_CropToFillOn(self)

    def CropToFillOff(self):
        r"""CropToFillOff(self)"""
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_CropToFillOff(self)
    __swig_destroy__ = _itkTileMergeImageFilterPython.delete_itkTileMergeImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMergeImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMergeImageFilterIUS4

        Create a new object of the class itkTileMergeImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMergeImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMergeImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMergeImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMergeImageFilterIUS4 in _itkTileMergeImageFilterPython:
_itkTileMergeImageFilterPython.itkTileMergeImageFilterIUS4_swigregister(itkTileMergeImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def tile_merge_image_filter(*args,  montage=..., release_data_flag: bool=..., release_data_before_update_flag: bool=..., montage_size: Union[Sequence[int], Sequence[int]]=..., input_tile: Union[Sequence[int], int, Sequence[int]]=..., tile_transform: Sequence[int]=..., background: Tuple[int, int, int, int]=..., crop_to_fill: bool=..., origin_adjustment: Sequence[float]=..., forced_spacing: Sequence[float]=..., absolute_threshold: float=..., relative_threshold: float=..., position_tolerance: int=..., crop_to_overlap: bool=..., obligatory_padding: Sequence[int]=..., padding_method=..., peak_interpolation_method=...,**kwargs):
    """Functional interface for TileMergeImageFilter"""
    import itk

    kwarg_typehints = { 'montage':montage,'release_data_flag':release_data_flag,'release_data_before_update_flag':release_data_before_update_flag,'montage_size':montage_size,'input_tile':input_tile,'tile_transform':tile_transform,'background':background,'crop_to_fill':crop_to_fill,'origin_adjustment':origin_adjustment,'forced_spacing':forced_spacing,'absolute_threshold':absolute_threshold,'relative_threshold':relative_threshold,'position_tolerance':position_tolerance,'crop_to_overlap':crop_to_overlap,'obligatory_padding':obligatory_padding,'padding_method':padding_method,'peak_interpolation_method':peak_interpolation_method }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TileMergeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def tile_merge_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.TileMergeImageFilter
    tile_merge_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    tile_merge_image_filter.__doc__ = filter_object.__doc__



