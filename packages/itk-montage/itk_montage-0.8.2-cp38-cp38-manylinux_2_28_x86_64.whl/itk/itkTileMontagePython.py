# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _MontagePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTileMontagePython
else:
    import _itkTileMontagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPhaseCorrelationOptimizerPython
import itk.itkPhaseCorrelationImageRegistrationMethodPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkOptimizerParametersPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkArrayPython
import itk.itkPhaseCorrelationOperatorPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkTranslationTransformPython
import itk.itkArray2DPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython

def itkTileMontageID2F_New():
    return itkTileMontageID2F.New()

class itkTileMontageID2F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageID2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageID2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageID2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID2F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD2"""
        return _itkTileMontagePython.itkTileMontageID2F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD2"""
        return _itkTileMontagePython.itkTileMontageID2F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID2F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID2F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageID2F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageID2F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize2 const

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageID2F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageID2F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageID2F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageID2F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageD2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageID2F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD2

        Parameters
        ----------
        position: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageID2F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageID2F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageID2F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageID2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageID2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageID2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageID2F

        Create a new object of the class itkTileMontageID2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageID2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageID2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageID2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageID2F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageID2F_swigregister(itkTileMontageID2F)

def itkTileMontageID3F_New():
    return itkTileMontageID3F.New()

class itkTileMontageID3F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageID3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageID3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageID3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID3F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD3"""
        return _itkTileMontagePython.itkTileMontageID3F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD3"""
        return _itkTileMontagePython.itkTileMontageID3F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID3F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID3F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageID3F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageID3F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize3 const

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageID3F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageID3F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageID3F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageID3F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageD3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageID3F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD3

        Parameters
        ----------
        position: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageID3F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageID3F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageID3F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageID3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageID3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageID3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageID3F

        Create a new object of the class itkTileMontageID3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageID3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageID3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageID3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageID3F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageID3F_swigregister(itkTileMontageID3F)

def itkTileMontageID4F_New():
    return itkTileMontageID4F.New()

class itkTileMontageID4F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageID4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageID4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageID4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageID4F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD4"""
        return _itkTileMontagePython.itkTileMontageID4F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD4"""
        return _itkTileMontagePython.itkTileMontageID4F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID4F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageID4F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageID4F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageID4F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize4 const

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageID4F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageID4F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageID4F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageID4F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageD4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageD4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageID4F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD4

        Parameters
        ----------
        position: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageID4F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageID4F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageID4F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageID4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageID4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageID4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageID4F

        Create a new object of the class itkTileMontageID4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageID4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageID4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageID4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageID4F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageID4F_swigregister(itkTileMontageID4F)

def itkTileMontageIF2F_New():
    return itkTileMontageIF2F.New()

class itkTileMontageIF2F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIF2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIF2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIF2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF2F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD2"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD2"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize2 const

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageF2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIF2F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD2

        Parameters
        ----------
        position: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIF2F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIF2F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIF2F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIF2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIF2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIF2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIF2F

        Create a new object of the class itkTileMontageIF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIF2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIF2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIF2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIF2F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIF2F_swigregister(itkTileMontageIF2F)

def itkTileMontageIF3F_New():
    return itkTileMontageIF3F.New()

class itkTileMontageIF3F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIF3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIF3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF3F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD3"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD3"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize3 const

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageF3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIF3F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD3

        Parameters
        ----------
        position: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIF3F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIF3F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIF3F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIF3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIF3F

        Create a new object of the class itkTileMontageIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIF3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIF3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIF3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIF3F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIF3F_swigregister(itkTileMontageIF3F)

def itkTileMontageIF4F_New():
    return itkTileMontageIF4F.New()

class itkTileMontageIF4F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIF4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIF4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIF4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIF4F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD4"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD4"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize4 const

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageF4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageF4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIF4F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD4

        Parameters
        ----------
        position: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIF4F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIF4F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIF4F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIF4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIF4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIF4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIF4F

        Create a new object of the class itkTileMontageIF4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIF4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIF4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIF4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIF4F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIF4F_swigregister(itkTileMontageIF4F)

def itkTileMontageISS2F_New():
    return itkTileMontageISS2F.New()

class itkTileMontageISS2F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageISS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageISS2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageISS2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS2F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD2"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD2"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize2 const

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageSS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageISS2F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD2

        Parameters
        ----------
        position: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageISS2F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageISS2F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageISS2F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageISS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageISS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageISS2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageISS2F

        Create a new object of the class itkTileMontageISS2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageISS2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageISS2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageISS2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageISS2F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageISS2F_swigregister(itkTileMontageISS2F)

def itkTileMontageISS3F_New():
    return itkTileMontageISS3F.New()

class itkTileMontageISS3F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageISS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageISS3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageISS3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS3F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD3"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD3"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize3 const

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageSS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageISS3F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD3

        Parameters
        ----------
        position: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageISS3F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageISS3F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageISS3F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageISS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageISS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageISS3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageISS3F

        Create a new object of the class itkTileMontageISS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageISS3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageISS3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageISS3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageISS3F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageISS3F_swigregister(itkTileMontageISS3F)

def itkTileMontageISS4F_New():
    return itkTileMontageISS4F.New()

class itkTileMontageISS4F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageISS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageISS4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageISS4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageISS4F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD4"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD4"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize4 const

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageSS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageSS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageISS4F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD4

        Parameters
        ----------
        position: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageISS4F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageISS4F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageISS4F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageISS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageISS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageISS4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageISS4F

        Create a new object of the class itkTileMontageISS4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageISS4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageISS4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageISS4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageISS4F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageISS4F_swigregister(itkTileMontageISS4F)

def itkTileMontageIUC2F_New():
    return itkTileMontageIUC2F.New()

class itkTileMontageIUC2F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUC2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUC2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUC2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC2F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD2"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD2"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize2 const

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUC2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD2

        Parameters
        ----------
        position: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUC2F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUC2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUC2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUC2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUC2F

        Create a new object of the class itkTileMontageIUC2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUC2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUC2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUC2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUC2F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUC2F_swigregister(itkTileMontageIUC2F)

def itkTileMontageIUC3F_New():
    return itkTileMontageIUC3F.New()

class itkTileMontageIUC3F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUC3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUC3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUC3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC3F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD3"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD3"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize3 const

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUC3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD3

        Parameters
        ----------
        position: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUC3F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUC3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUC3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUC3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUC3F

        Create a new object of the class itkTileMontageIUC3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUC3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUC3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUC3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUC3F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUC3F_swigregister(itkTileMontageIUC3F)

def itkTileMontageIUC4F_New():
    return itkTileMontageIUC4F.New()

class itkTileMontageIUC4F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUC4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUC4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUC4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUC4F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD4"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD4"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize4 const

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUC4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUC4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD4

        Parameters
        ----------
        position: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUC4F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUC4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUC4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUC4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUC4F

        Create a new object of the class itkTileMontageIUC4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUC4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUC4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUC4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUC4F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUC4F_swigregister(itkTileMontageIUC4F)

def itkTileMontageIUS2F_New():
    return itkTileMontageIUS2F.New()

class itkTileMontageIUS2F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUS2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUS2F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS2F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD2"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD2"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize2 const

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize2"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS2 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize2
        image: itkImageUS2 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize2
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD2

        Parameters
        ----------
        position: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUS2F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize2

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUS2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUS2F

        Create a new object of the class itkTileMontageIUS2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUS2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUS2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUS2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUS2F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUS2F_swigregister(itkTileMontageIUS2F)

def itkTileMontageIUS3F_New():
    return itkTileMontageIUS3F.New()

class itkTileMontageIUS3F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUS3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUS3F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS3F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD3"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD3"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize3 const

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize3"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS3 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize3
        image: itkImageUS3 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize3
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD3

        Parameters
        ----------
        position: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUS3F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize3

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUS3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUS3F

        Create a new object of the class itkTileMontageIUS3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUS3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUS3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUS3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUS3F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUS3F_swigregister(itkTileMontageIUS3F)

def itkTileMontageIUS4F_New():
    return itkTileMontageIUS4F.New()

class itkTileMontageIUS4F(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkTileMontageIUS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileMontageIUS4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileMontageIUS4F_Pointer"""
        return _itkTileMontagePython.itkTileMontageIUS4F_Clone(self)

    def SetOriginAdjustment(self, _arg):
        r"""
        SetOriginAdjustment(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetOriginAdjustment(self, _arg)

    def GetOriginAdjustment(self):
        r"""GetOriginAdjustment(self) -> itkPointD4"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetOriginAdjustment(self)

    def SetForcedSpacing(self, _arg):
        r"""
        SetForcedSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetForcedSpacing(self, _arg)

    def GetForcedSpacing(self):
        r"""GetForcedSpacing(self) -> itkVectorD4"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetForcedSpacing(self)

    def SetAbsoluteThreshold(self, _arg):
        r"""
        SetAbsoluteThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetAbsoluteThreshold(self, _arg)

    def GetAbsoluteThreshold(self):
        r"""GetAbsoluteThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetAbsoluteThreshold(self)

    def SetRelativeThreshold(self, _arg):
        r"""
        SetRelativeThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetRelativeThreshold(self, _arg)

    def GetRelativeThreshold(self):
        r"""GetRelativeThreshold(self) -> float"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetRelativeThreshold(self)

    def SetPositionTolerance(self, _arg):
        r"""
        SetPositionTolerance(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetPositionTolerance(self, _arg)

    def GetPositionTolerance(self):
        r"""GetPositionTolerance(self) -> unsigned long"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetPositionTolerance(self)

    def SetCropToOverlap(self, _arg):
        r"""
        SetCropToOverlap(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetCropToOverlap(self, _arg)

    def GetCropToOverlap(self):
        r"""GetCropToOverlap(self) -> bool"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetCropToOverlap(self)

    def SetObligatoryPadding(self, pad):
        r"""
        SetObligatoryPadding(self, pad)

        Parameters
        ----------
        pad: itkSize4 const

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetObligatoryPadding(self, pad)

    def GetObligatoryPadding(self):
        r"""GetObligatoryPadding(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetObligatoryPadding(self)

    def SetPaddingMethod(self, _arg):
        r"""
        SetPaddingMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetPaddingMethod(self, _arg)

    def GetPaddingMethod(self):
        r"""GetPaddingMethod(self) -> itkPhaseCorrelationImageRegistrationMethodEnums::PaddingMethod"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetPaddingMethod(self)

    def SetPeakInterpolationMethod(self, _arg):
        r"""
        SetPeakInterpolationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod const

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetPeakInterpolationMethod(self, _arg)

    def GetPeakInterpolationMethod(self):
        r"""GetPeakInterpolationMethod(self) -> itkPhaseCorrelationOptimizerEnums::PeakInterpolationMethod"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetPeakInterpolationMethod(self)

    def GetMontageSize(self):
        r"""GetMontageSize(self) -> itkSize4"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetMontageSize(self)

    def SetMontageSize(self, montageSize):
        r"""
        SetMontageSize(self, montageSize)

        Parameters
        ----------
        montageSize: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetMontageSize(self, montageSize)

    def SetInputTile(self, *args):
        r"""
        SetInputTile(self, linearIndex, image)

        Parameters
        ----------
        linearIndex: unsigned long
        image: itkImageUS4 *

        SetInputTile(self, linearIndex, imageFilename)

        Parameters
        ----------
        linearIndex: unsigned long
        imageFilename: std::string const &

        SetInputTile(self, position, image)

        Parameters
        ----------
        position: itkSize4
        image: itkImageUS4 *

        SetInputTile(self, position, imageFilename)

        Parameters
        ----------
        position: itkSize4
        imageFilename: std::string const &

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_SetInputTile(self, *args)

    def GetOutputTransform(self, position):
        r"""
        GetOutputTransform(self, position) -> itkTranslationTransformD4

        Parameters
        ----------
        position: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_GetOutputTransform(self, position)

    def GetTileReliabilities(self):
        r"""GetTileReliabilities(self) -> vectorF"""
        return _itkTileMontagePython.itkTileMontageIUS4F_GetTileReliabilities(self)

    def GetTileReliability(self, *args):
        r"""
        GetTileReliability(self, linearIndex) -> float

        Parameters
        ----------
        linearIndex: unsigned long

        GetTileReliability(self, nDIndex) -> float

        Parameters
        ----------
        nDIndex: itkSize4

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_GetTileReliability(self, *args)
    __swig_destroy__ = _itkTileMontagePython.delete_itkTileMontageIUS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileMontageIUS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileMontagePython.itkTileMontageIUS4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileMontageIUS4F

        Create a new object of the class itkTileMontageIUS4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileMontageIUS4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileMontageIUS4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileMontageIUS4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileMontageIUS4F in _itkTileMontagePython:
_itkTileMontagePython.itkTileMontageIUS4F_swigregister(itkTileMontageIUS4F)

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def tile_montage(*args,  origin_adjustment: Sequence[float]=..., forced_spacing: Sequence[float]=..., absolute_threshold: float=..., relative_threshold: float=..., position_tolerance: int=..., crop_to_overlap: bool=..., obligatory_padding: Sequence[int]=..., padding_method=..., peak_interpolation_method=..., montage_size: Sequence[int]=..., input_tile: Union[Sequence[int], int]=...,**kwargs):
    """Functional interface for TileMontage"""
    import itk

    kwarg_typehints = { 'origin_adjustment':origin_adjustment,'forced_spacing':forced_spacing,'absolute_threshold':absolute_threshold,'relative_threshold':relative_threshold,'position_tolerance':position_tolerance,'crop_to_overlap':crop_to_overlap,'obligatory_padding':obligatory_padding,'padding_method':padding_method,'peak_interpolation_method':peak_interpolation_method,'montage_size':montage_size,'input_tile':input_tile }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TileMontage.New(*args, **kwargs)

    return instance.__internal_call__()

def tile_montage_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.Montage.TileMontage
    tile_montage.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    tile_montage.__doc__ = filter_object.__doc__



