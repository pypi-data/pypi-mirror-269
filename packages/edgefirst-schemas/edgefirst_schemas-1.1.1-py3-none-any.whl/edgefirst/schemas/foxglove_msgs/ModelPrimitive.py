# foxglove_msgs/msg/ModelPrimitive
# A primitive representing a 3D model file loaded from an external URL or embedded data

# Generated by https://github.com/foxglove/schemas

from dataclasses import dataclass
from pycdr2 import IdlStruct
from pycdr2.types import uint8, sequence
from ..geometry_msgs.Pose import Pose
from ..geometry_msgs.Vector3 import Vector3
from .Color import Color
from .. import default_field

@dataclass
class ModelPrimitive(IdlStruct, typename='foxglove_msgs/ModelPrimitive'):
    # Origin of model relative to reference frame
    pose: Pose = Pose()

    # Scale factor to apply to the model along each axis
    scale: Vector3 = Vector3()

    # Solid color to use for the whole model if `override_color` is true.
    color: Color = Color()

    # Whether to use the color specified in `color` instead of any materials embedded in the original model.
    override_color: bool = False

    # URL pointing to model file. One of `url` or `data` should be provided.
    url: str = ''

    # [Media type](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types) of embedded model (e.g. `model/gltf-binary`). Required if `data` is provided instead of `url`. Overrides the inferred media type if `url` is provided.
    media_type: str = ''

    # Embedded model. One of `url` or `data` should be provided. If `data` is provided, `media_type` must be set to indicate the type of the data.
    data: sequence[uint8] = default_field([])