name: release

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build wheels - x86_64
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --sdist
      - name: Install built wheel - x86_64
        run: |
          pip install routrs --no-index --find-links dist --force-reinstall
          pip install pytest
          cd test && pytest
      - name: Build wheels - universal2
        uses: PyO3/maturin-action@v1
        with:
          target: universal2-apple-darwin
          args: --release --out dist
      - name: Install built wheel - universal2
        run: |
          pip install routrs --no-index --find-links dist --force-reinstall
          cd test && pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@nightly
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist
      - name: Install built wheel
        run: |
          pip install routrs --no-index --find-links dist --force-reinstall
          pip install pytest
          cd test && pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [x86_64, i686]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
          architecture: x64
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          rust-toolchain: nightly
          target: ${{ matrix.target }}
          manylinux: auto
          args: --release --out dist
      - name: Install built wheel
        if: matrix.target == 'x86_64'
        run: |
          pip install routrs --no-index --find-links dist --force-reinstall
          pip install pytest
          cd test && pytest
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    environment: pypi
    needs: [macos, windows, linux]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: wheels
      - name: Publish to PyPI
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing *
