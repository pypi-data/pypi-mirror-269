# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: CI Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10", "3.11"]
        vtk-version: ["9.0.*","9.1.*", "9.2.*","9.3.*","9.*"]
        numpy-version: ["1.*"]

        exclude:
          - python-version: "3.8"
            vtk-version: "9.0.*"

          - python-version: "3.9"
            vtk-version: "9.0.*"

          - python-version: "3.10"
            vtk-version: "9.0.*"
          - python-version: "3.10"
            vtk-version: "9.1.*"

          - python-version: "3.11"
            vtk-version: "9.0.*"
          - python-version: "3.11"
            vtk-version: "9.1.*"

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install "vtk==${{matrix.vtk-version}}"
        python -m pip install "numpy==${{matrix.numpy-version}}"

    - name: Install 3.6 Extra Dependencies
      if: ${{ matrix.python-version == '3.6' }}
      run: python -m pip install dataclasses
      
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./vtktonumpy --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 ./vtktonumpy --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        python -m pytest
