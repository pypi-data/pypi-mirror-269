Metadata-Version: 2.1
Name: entity-recognition-service
Version: 0.1.3
Summary: A library for technology entity recognition and recommendation
Home-page: https://github.com/cgoncalves94/entity-recognition
Author: Cesar Goncalves
Author-email: goncalves.cesaraugusto94@gmail.com
License: MIT
Keywords: entity recognition,recommendation,technology
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: asyncio>=3.4.3
Requires-Dist: bertopic==0.16.1
Requires-Dist: spacy>=3.0.0
Requires-Dist: transformers>=4.0.0
Requires-Dist: torch>=1.0.0
Requires-Dist: scikit-learn>=1.0.0
Requires-Dist: scipy>=1.0.0
Requires-Dist: pandas>=1.0.0
Requires-Dist: aiofiles>=0.8.0
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-asyncio; extra == "dev"
Requires-Dist: async-asgi-testclient; extra == "dev"

# Entity-Recognition

The Entity-Recognition library utilizes `spaCy`, `BERTopic`, and `Transformers` to provide a robust technology entity recognition system capable of identifying technological entities within texts and suggesting relevant technologies using advanced NLP techniques.

## Table of Contents
- [Entity-Recognition](#entity-recognition)
  - [Table of Contents](#table-of-contents)
  - [Features](#features)
  - [Installation](#installation)
    - [Prerequisites](#prerequisites)
    - [Getting Started](#getting-started)
  - [Usage](#usage)
  - [Development](#development)
    - [Setting Up a Development Environment](#setting-up-a-development-environment)
  - [Testing](#testing)
  - [Contributing](#contributing)
  - [License](#license)

## Features

- **Technology Entity Extraction**: Automatically extract technology-related terms and tools from texts.
- **Recommendation System**: Provides context-based technology recommendations.
- **BERTopic Integration**: Leverages topic modeling to enhance the relevance of recommendations.
- **spaCy Matchers**: Utilizes custom NLP patterns for precise entity recognition.

## Installation

### Prerequisites

- Python 3.6+
- pip

### Getting Started

Install the library directly from PyPI:

```bash
pip install entity-recognition-service
```

## Usage

Hereâ€™s how to use the Entity Recognition library in your Python scripts:

```python
from entity_recognition_service import EntityRecognizer

# Create an instance of the recognizer
recognizer = EntityRecognizer()

# Example texts
texts = ["I need an Express.js Mongo database backend", "and a React TypeScript frontend for my project"]

# Process texts
results = recognizer.process_texts(texts)
print(results)
```

## Development

### Setting Up a Development Environment

1. **Clone the repository**:
   ```
   git clone https://github.com/cgoncalves94/entity-recognition.git
   cd entity-recognition
   ```
2. **Create and Activate a Virtual Environment**:
   ```bash
   python -m venv .venv
   source .venv/bin/activate  # On Windows use `venv\Scripts\activate`
   ```
3. **Install Dependencies**:
    ```
    pip install -r requirements.txt
    ```


## Testing

Run tests to ensure the setup is correct:

```
pytest
```

## Contributing

Contributions are welcome! Please follow these steps:

1. Fork the repository on GitHub.
2. Clone the forked repository to your machine.
3. Create a new branch for your changes.
4. Make changes and test.
5. Submit a pull request with a comprehensive description of changes.

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.


