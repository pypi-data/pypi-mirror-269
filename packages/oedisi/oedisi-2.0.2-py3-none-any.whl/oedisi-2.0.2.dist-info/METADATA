Metadata-Version: 2.1
Name: oedisi
Version: 2.0.2
Summary: Orchestration interface for HELICS power simulations
Author-email: Joseph McKinsey <joseph.mckinsey@nrel.gov>
License: BSD 3-Clause
Keywords: oedisi,gadal,helics
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: helics-apps >=3.2.1
Requires-Dist: helics >=3.2.1
Requires-Dist: pydantic <2,>=1.7
Requires-Dist: psutil
Requires-Dist: click
Requires-Dist: pyyaml ~=6.0
Requires-Dist: kubernetes >=29.0
Provides-Extra: metrics
Requires-Dist: pandas ; extra == 'metrics'
Requires-Dist: numpy ; extra == 'metrics'
Requires-Dist: pyarrow ; extra == 'metrics'
Provides-Extra: test
Requires-Dist: black ; extra == 'test'
Requires-Dist: bump-my-version ; extra == 'test'
Requires-Dist: ipython ; extra == 'test'
Requires-Dist: ipdb ; extra == 'test'
Requires-Dist: gamspy ; extra == 'test'
Requires-Dist: memory-profiler ; extra == 'test'
Requires-Dist: mypy ~=1.0 ; extra == 'test'
Requires-Dist: pre-commit ; extra == 'test'
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: ruff ; extra == 'test'
Requires-Dist: httpx ; extra == 'test'
Requires-Dist: fastapi ~=0.104 ; extra == 'test'
Requires-Dist: uvicorn ; extra == 'test'
Requires-Dist: grequests ; extra == 'test'
Requires-Dist: numpy ; extra == 'test'
Requires-Dist: pandas ; extra == 'test'
Requires-Dist: pyarrow ; extra == 'test'

# Oedisi


[![Main - Integration Tests](https://github.com/openEDI/oedisi/actions/workflows/test-api.yml/badge.svg)](https://github.com/openEDI/oedisi/actions/workflows/test-api.yml)
[![Main - Unit Tests](https://github.com/openEDI/oedisi/actions/workflows/unit-tests.yml/badge.svg)](https://github.com/openEDI/oedisi/actions/workflows/unit-tests.yml)
[![Documentation](https://github.com/openEDI/oedisi/actions/workflows/build-docs.yml/badge.svg)](https://openedi.github.io/oedisi/)
[![PyPI version](https://badge.fury.io/py/oedisi.svg)](https://badge.fury.io/py/oedisi)

`oedisi` (OpenEDI - System Integration) is an orchestration interface for HELICS power simulations.

- connects algorithms and data in a co-simulation framework HELICS by instantiating new components with the right HELICS configuration
- runs simulations (including with debug features) using the `oedisi` CLI tool.
- provides common [Pydantic](https://github.com/pydantic/pydantic) models for communications between power system algorithms and data in `oedisi.types`

## Documentation

[Main Docs](https://openedi.github.io/oedisi/)

[Getting Started](https://openedi.github.io/oedisi/getting_started.html) (with example)

## Example

The repository [`sgidal-example`](https://github.com/openEDI/sgidal-example/) contains a basic example including
- OpenDSS federate
- measuring federate
- weighted least squares state estimator federate
- recording federates
