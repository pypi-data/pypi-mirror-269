{"version":3,"sources":["actions.tsx","StFileBrowser.tsx","index.tsx"],"names":["Actions","props","selectedItems","isFolder","icons","nameFilter","canCreateFolder","onCreateFolder","canRenameFile","onRenameFile","canRenameFolder","onRenameFolder","canDeleteFile","onDeleteFile","canDeleteFolder","onDeleteFolder","canDownloadFile","onDownloadFile","canDownloadFolder","onDownloadFolder","canChooseFile","onChooseFile","canChooseFolder","onChooseFolder","actions","length","selectedItemsAction","filter","item","action","Set","actionText","React","createElement","className","Loading","push","key","onClick","href","role","Folder","itemsWithoutKeyDerived","find","keyDerived","Rename","Delete","Download","aria-hidden","StreamlitEventType","noticeStreamlit","event","Streamlit","setComponentValue","FileBrowserStaticServer","StreamlitComponentBase","constructor","super","args","onResized","size","this","ajustHeight","render","IframeResizer","Object","assign","checkOrigin","autoResize","frameBorder","style","width","src","static_file_server_path","revoke_step","setFrameHeight","componentDidMount","path","window","addEventListener","_event$data","_event$data2","_event$data3","_event$data4","_event$data5","data","_event$data6","_event$data7","_event$data8","_event$data9","_event$data10","_event$data11","file","get","name","create_time","update_time","access_time","type","SELECT_FILE","target","SELECT_FOLDER","show_choose_file","show_choose_folder","CHOOSE_FILE","CHOOSE_FOLDER","componentDidUpdate","FileBrowserNative","_this","folderOpenHandler","opts","folderCloseHandler","fileSelectedHandler","ignore_file_select_event","files","folderSelectedHandler","ignore_folder_select_event","startsWith","downlandHandler","keys","includes","forEach","_a$parentNode","url","URL","artifacts_download_site","toString","filename","substring","lastIndexOf","a","document","download","body","appendChild","click","parentNode","removeChild","DOWNLOAD","deleteFileHandler","fileKey","console","log","DELETE_FILE","remainingFiles","createFolderHandler","folderKey","CREATE_FOLDER","chooseHandler","folders","endsWith","map","renameFileHandler","oldFileKey","newFileKey","RENAME_FILE","renameFolderHandler","oldFolderKey","newFolderKey","RENAME_FOLDER","convertFiles","modified","noop","Fragment","FileBrowser","showActionBar","canFilter","detailRenderer","Icons","FontAwesome","onFolderOpen","onFolderClose","onSelect","onSelectFolder","actionRenderer","_len","arguments","Array","_key","show_new_folder","show_rename_file","show_rename_folder","show_download_file","show_delete_file","i","root","getElementById","height","Math","min","clientHeight","scrollHeight","offsetHeight","setTimeout","StreamlitFileBrowserNative","withStreamlitConnection","StreamlitFileBrowserStaticServer","FileBrowserWrapper","ReactDOM","StrictMode","StFileBrowser"],"mappings":"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","file":"static/js/main.5cb29c17.chunk.js","sourcesContent":["import React from \"react\"\n\nexport interface ISelectItem {\n  key: string\n  keyDerived: string\n  action: string\n}\n\nexport interface IIconsProps {\n  Folder: JSX.Element\n  Rename: JSX.Element\n  Delete: JSX.Element\n  Download: JSX.Element\n  Loading: JSX.Element\n}\n\nexport interface IActionsProps {\n  selectedItems: ISelectItem[]\n  isFolder: boolean\n  icons: IIconsProps\n  nameFilter: string\n\n  canCreateFolder: boolean\n  onCreateFolder: () => void\n\n  canRenameFile: boolean\n  onRenameFile: () => void\n\n  canRenameFolder: boolean\n  onRenameFolder: () => void\n\n  canDeleteFile: boolean\n  onDeleteFile: () => void\n\n  canDeleteFolder: boolean\n  onDeleteFolder: () => void\n\n  canDownloadFile: boolean\n  onDownloadFile: () => void\n\n  canDownloadFolder: boolean\n  onDownloadFolder: () => void\n\n  canChooseFile: boolean\n  onChooseFile: () => void\n\n  canChooseFolder: boolean\n  onChooseFolder: () => void\n}\n\nconst Actions: React.FC<IActionsProps> = (props) => {\n  const {\n    selectedItems,\n    isFolder,\n    icons,\n    nameFilter,\n\n    canCreateFolder,\n    onCreateFolder,\n\n    canRenameFile,\n    onRenameFile,\n\n    canRenameFolder,\n    onRenameFolder,\n\n    canDeleteFile,\n    onDeleteFile,\n\n    canDeleteFolder,\n    onDeleteFolder,\n\n    canDownloadFile,\n    onDownloadFile,\n\n    canDownloadFolder,\n    onDownloadFolder,\n\n    canChooseFile,\n    onChooseFile,\n\n    canChooseFolder,\n    onChooseFolder,\n  } = props\n\n  let actions: JSX.Element[] | JSX.Element = []\n\n  if (selectedItems.length) {\n    // Something is selected. Build custom actions depending on what it is.\n    const selectedItemsAction = selectedItems.filter((item) => item.action)\n    if (\n      selectedItemsAction.length === selectedItems.length &&\n      [...new Set(selectedItemsAction)].length === 1\n    ) {\n      // Selected item has an active action against it. Disable all other actions.\n      let actionText\n      switch (selectedItemsAction[0].action) {\n        case \"delete\":\n          actionText = \"Deleting ...\"\n          break\n\n        case \"rename\":\n          actionText = \"Renaming ...\"\n          break\n\n        default:\n          actionText = \"Moving ...\"\n          break\n      }\n\n      actions = (\n        // TODO: Enable plugging in custom spinner.\n        <div className=\"item-actions\">\n          {icons.Loading} {actionText}\n        </div>\n      )\n    } else {\n      if (isFolder && canCreateFolder && !nameFilter) {\n        actions.push(\n          <li key=\"action-add-folder\">\n            <a onClick={onCreateFolder} href=\"#\" role=\"button\">\n              {icons.Folder}\n              &nbsp;Add Subfolder\n            </a>\n          </li>\n        )\n      }\n\n      const itemsWithoutKeyDerived = selectedItems.find(\n        (item) => !item.keyDerived\n      )\n      if (\n        !itemsWithoutKeyDerived &&\n        !isFolder &&\n        canRenameFile &&\n        selectedItems.length === 1\n      ) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a onClick={onRenameFile} href=\"#\" role=\"button\">\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      } else if (!itemsWithoutKeyDerived && isFolder && canRenameFolder) {\n        actions.push(\n          <li key=\"action-rename\">\n            <a onClick={onRenameFolder} href=\"#\" role=\"button\">\n              {icons.Rename}\n              &nbsp;Rename\n            </a>\n          </li>\n        )\n      }\n\n      if (!itemsWithoutKeyDerived && !isFolder && canDeleteFile) {\n        actions.push(\n          <li key=\"action-delete\">\n            <a onClick={onDeleteFile} href=\"#\" role=\"button\">\n              {icons.Delete}\n              &nbsp;Delete\n            </a>\n          </li>\n        )\n      }\n      // else if (!itemsWithoutKeyDerived && isFolder && canDeleteFolder) {\n      //   actions.push(\n      //     <li key=\"action-delete\">\n      //       <a\n      //         onClick={onDeleteFolder}\n      //         href=\"#\"\n      //         role=\"button\"\n      //       >\n      //         {icons.Delete}\n      //         &nbsp;Delete\n      //       </a>\n      //     </li>\n      //   )\n      // }\n\n      if ((!isFolder && canDownloadFile) || (isFolder && canDownloadFolder)) {\n        actions.push(\n          <li key=\"action-download\">\n            <a\n              onClick={isFolder ? onDownloadFolder : onDownloadFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              {icons.Download}\n              &nbsp;Download\n            </a>\n          </li>\n        )\n      }\n\n      if ((!isFolder && canChooseFile) || (isFolder && canChooseFolder)) {\n        actions.push(\n          <li key=\"action-choose\">\n            <a\n              onClick={isFolder ? onChooseFolder : onChooseFile}\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fa fa-plus\" aria-hidden=\"true\" />\n              &nbsp;Choose\n            </a>\n          </li>\n        )\n      }\n\n      if (actions.length) {\n        actions = <ul className=\"item-actions\">{actions}</ul>\n      } else {\n        actions = <div className=\"item-actions\">&nbsp;</div>\n      }\n    }\n  } else {\n    // Nothing selected: We're in the 'root' folder. Only allowed action is adding a folder.\n    if (canCreateFolder && !nameFilter) {\n      actions.push(\n        <li key=\"action-add-folder\">\n          <a onClick={onCreateFolder} href=\"#\" role=\"button\">\n            {icons.Folder}\n            &nbsp;Add Folder\n          </a>\n        </li>\n      )\n    }\n\n    if (actions.length) {\n      actions = <ul className=\"item-actions\">{actions}</ul>\n    } else {\n      actions = <div className=\"item-actions\">&nbsp;</div>\n    }\n  }\n\n  return actions\n}\n\nexport default Actions\n","import React from \"react\"\nimport {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n  ComponentProps,\n} from \"streamlit-component-lib\"\nimport FileBrowser, {\n  Icons,\n  FileBrowserFile,\n  FileBrowserFolder,\n} from \"react-keyed-file-browser\"\n\nimport get from \"lodash.get\"\nimport IframeResizer from \"iframe-resizer-react\"\nimport Actions from \"./actions\"\nimport type { IActionsProps } from \"./actions\"\n\nimport \"react-keyed-file-browser/dist/react-keyed-file-browser.css\"\nimport \"font-awesome/css/font-awesome.min.css\"\n\ninterface File {\n  path: string\n  name?: string\n  size?: number\n  create_time?: number\n  update_time?: number\n  access_time?: number\n}\n\ninterface Folder {\n  path: string\n  name?: string\n}\n\nenum StreamlitEventType {\n  SELECT_FILE = \"SELECT_FILE\",\n  SELECT_FOLDER = \"SELECT_FOLDER\",\n  DOWNLOAD = \"DOWNLOAD\",\n  DELETE_FILE = \"DELETE_FILE\",\n  DELETE_FOLDER = \"DELETE_FOLDER\",\n  RENAME_FOLDER = \"RENAME_FOLDER\",\n  RENAME_FILE = \"RENAME_FILE\",\n  CREATE_FILE = \"CREATE_FILE\",\n  CREATE_FOLDER = \"CREATE_FOLDER\",\n  MOVE_FILE = \"MOVE_FILE\",\n  MOVE_FOLDER = \"MOVE_FOLDER\",\n  CHOOSE_FILE = \"CHOOSE_FILE\",\n  CHOOSE_FOLDER = \"CHOOSE_FOLDER\",\n}\n\ninterface StreamlitEvent {\n  type: StreamlitEventType\n  target: File | Folder | (File | Folder)[]\n}\n\ninterface State {\n  numClicks: number\n  isFocused: boolean\n}\n\ninterface IArgs {\n  files: File[]\n  path: string\n  artifacts_download_site: string\n  show_download_file: boolean\n  show_delete_file: boolean\n  show_choose_folder: boolean\n  show_choose_file: boolean\n  show_new_folder: boolean\n  show_upload_file: boolean\n  show_rename_folder: boolean\n  show_rename_file: boolean\n  ignore_file_select_event: boolean\n  ignore_folder_select_event: boolean\n  static_file_server_path: string\n}\n\nconst noticeStreamlit = (event: StreamlitEvent | StreamlitEvent[]) =>\n  Streamlit.setComponentValue(event)\n\nclass FileBrowserStaticServer extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    Streamlit.setFrameHeight()\n  }\n\n  componentDidMount(): void {\n    const root = this.args.path\n    const args = this.args\n    window.addEventListener(\"message\", function (event) {\n      // console.log('从 iframe 中传递过来的点击事件:', event.data);\n      if (\n        event.data?.event === \"filebrowser_file_selected\" ||\n        event.data?.event === \"filebrowser_dir_selected\" ||\n        event.data?.event === \"filebrowser_file_double_selected\" ||\n        event.data?.event === \"filebrowser_path_changed\" ||\n        event.data?.event === \"filebrowser_file_choose\"\n      ) {\n        const file: File = {\n          path: get(event, \"data.data.file.path\", \"\"),\n        }\n        get(event, \"data.data.file.name\", \"\") &&\n          (file.name = get(event, \"data.data.file.name\", \"\"))\n        get(event, \"data.data.file.size\", 0) &&\n          (file.size = get(event, \"data.data.file.size\", 0))\n        get(event, \"data.data.file.create_time\", 0) &&\n          (file.create_time = get(event, \"data.data.file.create_time\", 0))\n        get(event, \"data.data.file.update_time\", 0) &&\n          (file.update_time = get(event, \"data.data.file.update_time\", 0))\n        get(event, \"data.data.file.access_time\", 0) &&\n          (file.access_time = get(event, \"data.data.file.access_time\", 0))\n\n        event.data?.event === \"filebrowser_file_selected\" &&\n          noticeStreamlit({\n            type: StreamlitEventType.SELECT_FILE,\n            target: file,\n          })\n        event.data?.event === \"filebrowser_dir_selected\" &&\n          noticeStreamlit({\n            type: StreamlitEventType.SELECT_FOLDER,\n            target: file,\n          })\n        const { show_choose_file, show_choose_folder } = args\n        event.data?.event === \"filebrowser_file_double_selected\" &&\n          show_choose_file &&\n          noticeStreamlit({\n            type: StreamlitEventType.CHOOSE_FILE,\n            target: [file],\n          })\n        event.data?.event === \"filebrowser_file_choose\" &&\n          show_choose_file &&\n          noticeStreamlit({\n            type: StreamlitEventType.CHOOSE_FILE,\n            target: [file],\n          })\n        event.data?.event === \"filebrowser_folder_choose\" &&\n          show_choose_folder &&\n          noticeStreamlit({\n            type: StreamlitEventType.CHOOSE_FOLDER,\n            target: [file],\n          })\n        event.data?.event === \"filebrowser_path_changed\" &&\n          noticeStreamlit({\n            type: StreamlitEventType.SELECT_FOLDER,\n            target: file,\n          })\n      }\n    })\n    this.ajustHeight()\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight()\n  }\n\n  onResized = (size: any) => {\n    this.ajustHeight()\n  }\n\n  public render = () => {\n    return (\n      <IframeResizer\n        {...this.args}\n        checkOrigin={false}\n        autoResize\n        onResized={this.onResized}\n        frameBorder={0}\n        style={{ width: \"100%\" }}\n        src={this.args.static_file_server_path}\n      />\n    )\n  }\n}\n\nclass FileBrowserNative extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  ajustHeight(revoke_step?: number) {\n    const root = document.getElementById(\"root\")\n    if (root) {\n      const height = Math.min(\n        root.clientHeight,\n        root.scrollHeight,\n        root.offsetHeight\n      )\n      Streamlit.setFrameHeight(height - (revoke_step ? revoke_step : 0))\n      setTimeout(Streamlit.setFrameHeight, 1)\n    }\n  }\n\n  componentDidMount() {\n    this.ajustHeight()\n  }\n\n  componentDidUpdate() {\n    this.ajustHeight()\n  }\n\n  folderOpenHandler = (opts: FileBrowserFolder) => this.ajustHeight()\n  folderCloseHandler = (opts: FileBrowserFolder) => this.ajustHeight()\n\n  fileSelectedHandler = (opts: FileBrowserFile) => {\n    if (!this.args.ignore_file_select_event) {\n      const file = this.args.files.find((file) => file.path === opts.key)\n      file &&\n        noticeStreamlit({ type: StreamlitEventType.SELECT_FILE, target: file })\n    }\n  }\n\n  folderSelectedHandler = (opts: FileBrowserFolder) => {\n    if (!this.args.ignore_folder_select_event) {\n      const files = this.args.files.filter(\n        (file) => file.path !== opts.key && file.path.startsWith(opts.key)\n      )\n      files &&\n        noticeStreamlit({\n          type: StreamlitEventType.SELECT_FOLDER,\n          target: { path: opts.key },\n        })\n    }\n  }\n\n  downlandHandler = (keys: string[]) => {\n    const files = this.args.files.filter((file) => keys.includes(file.path))\n    files.forEach((file) => {\n      let url = new URL(file.path, this.args.artifacts_download_site).toString()\n      let filename = url.substring(url.lastIndexOf(\"/\") + 1)\n      let a = document.createElement(\"a\")\n      a.target = \"_blank\"\n      a.href = url\n      a.download = filename\n      document.body.appendChild(a)\n      a.click()\n      a.parentNode?.removeChild(a)\n    })\n    files.length &&\n      noticeStreamlit({ type: StreamlitEventType.DOWNLOAD, target: files })\n  }\n\n  deleteFileHandler = (fileKey: string | string[]) => {\n    const files = this.args.files.filter((file) =>\n      typeof fileKey === \"string\"\n        ? fileKey === file.path\n        : fileKey.includes(file.path)\n    )\n    console.log(\"deleteFileHandler\", \"key\", fileKey, \"files \", files)\n\n    files.length &&\n      noticeStreamlit({ type: StreamlitEventType.DELETE_FILE, target: files })\n\n    const remainingFiles = this.args.files.filter((file) =>\n      typeof fileKey === \"string\"\n        ? fileKey !== file.path\n        : !fileKey.includes(file.path)\n    )\n    this.args.files = remainingFiles\n  }\n\n  createFolderHandler = (folderKey: string) => {\n    noticeStreamlit({\n      type: StreamlitEventType.CREATE_FOLDER,\n      target: { path: folderKey },\n    })\n  }\n\n  chooseHandler = (keys: string[]) => {\n    const folders = keys\n      .filter((key) => key.endsWith(\"/\"))\n      .map((key) => ({ path: key }))\n\n    const files = this.args.files.filter(\n      (file) => keys.includes(file.path) && !file.path.endsWith(\"/\")\n    )\n\n    if (folders.length && !files.length) {\n      return noticeStreamlit({\n        type: StreamlitEventType.CHOOSE_FOLDER,\n        target: folders,\n      })\n    }\n\n    if (files.length && !folders.length) {\n      return noticeStreamlit({\n        type: StreamlitEventType.CHOOSE_FILE,\n        target: files,\n      })\n    }\n\n    if (files.length && folders.length) {\n      return noticeStreamlit([\n        {\n          type: StreamlitEventType.CHOOSE_FOLDER,\n          target: folders,\n        },\n        {\n          type: StreamlitEventType.CHOOSE_FILE,\n          target: files,\n        },\n      ])\n    }\n  }\n\n  renameFileHandler = (oldFileKey: string, newFileKey: string) => {\n    const file = this.args.files.find((file) => file.path === oldFileKey)\n    file &&\n      noticeStreamlit({\n        type: StreamlitEventType.RENAME_FILE,\n        target: { path: newFileKey, name: file.name },\n      })\n  }\n\n  renameFolderHandler = (oldFolderKey: string, newFolderKey: string) => {\n    console.log(\"renameFolderHandler\", oldFolderKey, newFolderKey)\n    const file = this.args.files.find(\n      (file) =>\n        file.path.substring(0, file.path.lastIndexOf(\"/\") + 1) === oldFolderKey\n    )\n    file &&\n      noticeStreamlit({\n        type: StreamlitEventType.RENAME_FOLDER,\n        target: {\n          path: newFolderKey,\n          name: file.path.substring(0, file.path.lastIndexOf(\"/\") + 1),\n        },\n      })\n  }\n\n  convertFiles = (files: File[]): FileBrowserFile[] =>\n    files.map((file) => ({\n      key: file.path,\n      modified: file.update_time || 0,\n      size: file.size || 0,\n    }))\n\n  noop = () => <></>\n  public render = () => {\n    return (\n      <div>\n        <FileBrowser\n          {...this.args}\n          showActionBar\n          canFilter={true}\n          detailRenderer={this.noop}\n          icons={Icons.FontAwesome(4)}\n          files={this.convertFiles(this.args.files)}\n          onFolderOpen={this.folderOpenHandler}\n          onFolderClose={this.folderCloseHandler}\n          onSelect={this.fileSelectedHandler}\n          onSelectFolder={this.folderSelectedHandler}\n          onDownloadFile={this.downlandHandler}\n          onDeleteFile={this.deleteFileHandler}\n          onCreateFolder={this.createFolderHandler}\n          onRenameFile={this.renameFileHandler}\n          onRenameFolder={this.renameFolderHandler}\n          actionRenderer={(...args: IActionsProps[]) => {\n            return Actions({\n              ...args[0],\n              ...{\n                canChooseFile: this.args.show_choose_file,\n                canChooseFolder: this.args.show_choose_folder,\n                canCreateFolder: this.args.show_new_folder,\n                canRenameFile: this.args.show_rename_file,\n                canRenameFolder: this.args.show_rename_folder,\n                canDownloadFile:\n                  this.args.show_download_file &&\n                  !!this.args.artifacts_download_site,\n                canDeleteFile: this.args.show_delete_file,\n                onChooseFolder: () =>\n                  this.chooseHandler(args[0].selectedItems.map((i) => i.key)),\n                onChooseFile: () =>\n                  this.chooseHandler(args[0].selectedItems.map((i) => i.key)),\n                onDeleteFile: () =>\n                  this.deleteFileHandler(\n                    args[0].selectedItems.map((i) => i.key)\n                  ),\n              },\n            }) as JSX.Element\n          }}\n        />\n      </div>\n    )\n  }\n}\nconst StreamlitFileBrowserNative = withStreamlitConnection(FileBrowserNative)\nconst StreamlitFileBrowserStaticServer = withStreamlitConnection(\n  FileBrowserStaticServer\n)\n\nclass FileBrowserWrapper extends StreamlitComponentBase<State> {\n  private args: IArgs\n\n  constructor(props: ComponentProps) {\n    super(props)\n    this.args = props.args\n  }\n\n  public render(): React.ReactNode {\n    if (this.args.static_file_server_path) {\n      return (\n        <div>\n          <StreamlitFileBrowserStaticServer {...this.props} />\n        </div>\n      )\n    } else {\n      return (\n        <div>\n          <StreamlitFileBrowserNative {...this.props} />\n        </div>\n      )\n    }\n  }\n}\n\nexport default withStreamlitConnection(FileBrowserWrapper)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport StFileBrowser from \"./StFileBrowser\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <StFileBrowser />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}