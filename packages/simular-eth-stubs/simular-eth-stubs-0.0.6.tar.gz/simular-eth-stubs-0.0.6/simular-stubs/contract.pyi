import typing
from .simular import PyAbi as PyAbi, PyEvm as PyEvm
from typing import Any

def convert_for_soltypes(args: typing.Tuple): ...

class Function:
    name: Any
    evm: Any
    abi: Any
    contract_address: Any
    def __init__(self, evm: PyEvm, abi: PyAbi, contract_address: str, name: str) -> None: ...
    def call(self, *args): ...
    def simulate(self, *args, caller: str = ..., value: int = ...): ...
    def transact(self, *args, caller: str = ..., value: int = ...): ...

class Contract:
    address: Any
    evm: Any
    abi: Any
    def __init__(self, evm: PyEvm, abi: PyAbi) -> None: ...
    def __getattr__(self, name: str) -> Function: ...
    def at(self, address: str) -> Contract: ...
    def deploy(self, *args, caller: str = ..., value: int = ...) -> str: ...
