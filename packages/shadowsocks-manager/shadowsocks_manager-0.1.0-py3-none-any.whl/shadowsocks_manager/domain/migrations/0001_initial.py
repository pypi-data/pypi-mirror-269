# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2024-04-21 20:23
from __future__ import unicode_literals

import django.contrib.sites.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Root domain name. Example: yourdomain.com.', max_length=64, unique=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='NameServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name for the Nameserver, name it as your wish. Example: name.com.', max_length=64, unique=True)),
                ('api_cls_name', models.CharField(choices=[('NameNsApi', 'NameNsApi')], help_text='Select the API class name for the Nameserver.', max_length=32, verbose_name='API Class')),
                ('user', models.CharField(blank=True, help_text='User identity for the Nameserver API service.', max_length=64, null=True)),
                ('credential', models.CharField(blank=True, help_text='User credential/token for the Nameserver API service.', max_length=128, null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(help_text='Host name. Example: vpn.', max_length=64)),
                ('type', models.CharField(blank=True, choices=[('A', 'A'), ('MX', 'MX'), ('CNAME', 'CNAME'), ('TXT', 'TXT'), ('SRV', 'SRV'), ('AAAA', 'AAAA'), ('NS', 'NS'), ('ANAME', 'ANAME')], max_length=8, null=True)),
                ('answer', models.CharField(blank=True, help_text='Answer for the host name, comma "," is the delimiter for multiple answers.', max_length=512, null=True)),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('dt_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='domain.Domain')),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('sites.site',),
            managers=[
                ('objects', django.contrib.sites.models.SiteManager()),
            ],
        ),
        migrations.AddField(
            model_name='record',
            name='site',
            field=models.ForeignKey(blank=True, help_text="The record with a site will be dynamically added to Django's ALLOWED_HOSTS.", null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='records', to='domain.Site'),
        ),
        migrations.AddField(
            model_name='domain',
            name='nameserver',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='domain.NameServer'),
        ),
        migrations.AlterUniqueTogether(
            name='record',
            unique_together=set([('host', 'domain')]),
        ),
    ]
