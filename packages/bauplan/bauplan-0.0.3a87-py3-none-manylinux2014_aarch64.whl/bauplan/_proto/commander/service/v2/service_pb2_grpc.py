# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""

import grpc

from bauplan._proto.commander.service.v2 import (
    service_pb2 as __proto_dot_commander_dot_service_dot_v2_dot_service__pb2,
)


class V2CommanderServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateImportPlan = channel.unary_unary(
            '/_proto.commander.service.v2.V2CommanderService/CreateImportPlan',
            request_serializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanRequest.SerializeToString,
            response_deserializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanResponse.FromString,
        )
        self.ApplyImportPlan = channel.unary_unary(
            '/_proto.commander.service.v2.V2CommanderService/ApplyImportPlan',
            request_serializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanRequest.SerializeToString,
            response_deserializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanResponse.FromString,
        )


class V2CommanderServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateImportPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ApplyImportPlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_V2CommanderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'CreateImportPlan': grpc.unary_unary_rpc_method_handler(
            servicer.CreateImportPlan,
            request_deserializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanRequest.FromString,
            response_serializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanResponse.SerializeToString,
        ),
        'ApplyImportPlan': grpc.unary_unary_rpc_method_handler(
            servicer.ApplyImportPlan,
            request_deserializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanRequest.FromString,
            response_serializer=__proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        '_proto.commander.service.v2.V2CommanderService', rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class V2CommanderService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateImportPlan(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/_proto.commander.service.v2.V2CommanderService/CreateImportPlan',
            __proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanRequest.SerializeToString,
            __proto_dot_commander_dot_service_dot_v2_dot_service__pb2.CreateImportPlanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ApplyImportPlan(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/_proto.commander.service.v2.V2CommanderService/ApplyImportPlan',
            __proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanRequest.SerializeToString,
            __proto_dot_commander_dot_service_dot_v2_dot_service__pb2.ApplyImportPlanResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
