name: deploy

on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  workflow_dispatch:

jobs:
  # https://cibuildwheel.readthedocs.io/en/stable/setup/#github-actions
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        # https://cibuildwheel.readthedocs.io/en/stable/options/#build-skip
        buildplat:
          - [ubuntu-20.04, manylinux_x86_64]
          - [macos-12, macosx_x86_64]
          # No Github-Actions hosted runner for M1 mac for now...
          # https://github.com/actions/runner-images/issues/2187
          # - [macos-12, macosx_arm64]
        python: ["cp38", "cp39", "cp310", "cp311"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install MacOS dependencies
        if: ${{ startsWith(matrix.buildplat[0], 'macos') }}
        # https://github.com/bluesheeptoken/CPT/blob/master/CI/github/build_wheels.sh
        # https://github.com/scikit-learn/scikit-learn/blob/main/build_tools/github/build_wheels.sh
        run: |
          PREFIX=$(brew --prefix)
          brew install libomp
          echo CC=/usr/bin/clang >> $GITHUB_ENV
          echo CXX=/usr/bin/clang++ >> $GITHUB_ENV
          echo CFLAGS="${CFLAGS} -I${PREFIX}/opt/libomp/include" >> $GITHUB_ENV
          echo CXXFLAGS="${CXXFLAGS} -I${PREFIX}/opt/libomp/include" >> $GITHUB_ENV
          echo LDFLAGS="${LDFLAGS} -Wl,-rpath,${PREFIX}/opt/libomp/lib -L${PREFIX}/opt/libomp/lib -lomp" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.17.0
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}
        with:
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4
        with:
          name: pypi-${{ matrix.python }}-${{ matrix.buildplat[1] }}
          path: ./wheelhouse/*.whl

  build_sdist:
    if: ${{ github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get install -y make cmake gcc g++

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: pypi-sdist
          path: dist/*.tar.gz

  deploy-pypi:

    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: pypi-*
          merge-multiple: true
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
