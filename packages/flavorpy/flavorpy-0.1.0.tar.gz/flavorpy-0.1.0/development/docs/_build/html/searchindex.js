Search.setIndex({"docnames": ["constructterms", "index", "modelfitting", "modules"], "filenames": ["constructterms.rst", "index.rst", "modelfitting.rst", "modules.rst"], "titles": ["constructterms package", "Welcome to FlavorPy\u2019s documentation!", "modelfitting package", "src"], "terms": {"list_allowed_term": [0, 3], "all_field": 0, "order": 0, "4": 0, "sourc": 0, "param": 0, "A": 0, "have": 0, "an": 0, "object": 0, "class": 0, "return": 0, "term": 0, "represent": 0, "thi": 0, "ha": 0, "int": 0, "The": 0, "up": 0, "which": 0, "ar": 0, "consid": 0, "i": 0, "e": 0, "how": 0, "mani": 0, "multipli": 0, "yield": 0, "whose": 0, "element": 0, "coincid": 0, "name": 0, "base": 0, "und": 0, "under": 0, "some": 0, "symmetri": 0, "is_desir": [0, 3], "desired_field": 0, "print_caus": 0, "fals": 0, "bool": 0, "check": 0, "same": 0, "wai": 0, "For": 0, "non": 0, "abelian": 0, "least": 0, "one": 0, "irrep": 0, "us": 0, "exampl": 0, "lagrangian": 0, "invari": 0, "compar": 0, "option": 0, "If": 0, "true": 0, "print": 0, "caus": 0, "end": 0, "result": 0, "time": [0, 3], "you": 0, "want": 0, "repres": 0, "tenosr": 0, "abeliangroup": [0, 3], "1": 0, "charge_field": 0, "charge_desir": 0, "make_product": [0, 3], "chargea": 0, "chargeb": 0, "nonabeliangroup": [0, 3], "gapid": 0, "tensor_product": 0, "clebsch": 0, "rep_field": 0, "rep_desir": 0, "note": 0, "function": 0, "doe": 0, "repa": 0, "repb": 0, "rather": 0, "ani": 0, "rep": 0, "u1group": [0, 3], "sever": 0, "It": 0, "can": 0, "find": 0, "superpotenti": 0, "src": 1, "constructterm": [1, 3], "packag": [1, 3], "submodul": [1, 3], "calcul": [1, 3], "modul": [1, 3], "field": [1, 3], "group": [1, 3], "modelfit": [1, 3], "experimentaldataset": [1, 3], "fit": [1, 3], "mixingcalcul": [1, 3], "model": [1, 3], "index": 1, "search": 1, "page": 1, "content": 3}, "objects": {"": [[0, 0, 0, "-", "constructterms"]], "constructterms": [[0, 0, 0, "-", "calculations"], [0, 0, 0, "-", "field"], [0, 0, 0, "-", "group"]], "constructterms.calculations": [[0, 1, 1, "", "list_allowed_terms"]], "constructterms.field": [[0, 2, 1, "", "Field"]], "constructterms.field.Field": [[0, 3, 1, "", "is_desired"], [0, 3, 1, "", "times"]], "constructterms.group": [[0, 2, 1, "", "AbelianGroup"], [0, 2, 1, "", "Group"], [0, 2, 1, "", "NonAbelianGroup"], [0, 2, 1, "", "U1Group"]], "constructterms.group.AbelianGroup": [[0, 3, 1, "", "is_desired"], [0, 3, 1, "", "make_product"]], "constructterms.group.NonAbelianGroup": [[0, 3, 1, "", "is_desired"], [0, 3, 1, "", "make_product"]], "constructterms.group.U1Group": [[0, 3, 1, "", "is_desired"], [0, 3, 1, "", "make_product"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"constructterm": 0, "packag": [0, 2], "submodul": [0, 2], "calcul": 0, "modul": [0, 2], "make": 0, "list": 0, "all": 0, "combin": 0, "field": 0, "contain": 0, "charg": 0, "allow": 0, "tensor": 0, "product": 0, "self": 0, "other_field": 0, "group": 0, "content": [0, 1, 2], "welcom": 1, "flavorpi": 1, "": 1, "document": 1, "indic": 1, "tabl": 1, "modelfit": 2, "experimentaldataset": 2, "fit": 2, "mixingcalcul": 2, "model": 2, "src": 3}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"constructterms package": [[0, "constructterms-package"]], "Submodules": [[0, "submodules"], [2, "submodules"]], "constructterms.calculations module": [[0, "module-constructterms.calculations"]], "Make a list of all combinations of fields, that contain the charges of the field \u2018allowed\u2019.": [[0, "make-a-list-of-all-combinations-of-fields-that-contain-the-charges-of-the-field-allowed"]], "constructterms.field module": [[0, "module-constructterms.field"]], "Calculates the tensor product of \u2018self\u2019 and \u2018other_field\u2019.": [[0, "calculates-the-tensor-product-of-self-and-other-field"]], "constructterms.group module": [[0, "module-constructterms.group"]], "Module contents": [[0, "module-constructterms"], [2, "module-contents"]], "Welcome to FlavorPy\u2019s documentation!": [[1, "welcome-to-flavorpy-s-documentation"]], "Contents:": [[1, null]], "Indices and tables": [[1, "indices-and-tables"]], "modelfitting package": [[2, "modelfitting-package"]], "modelfitting.experimentaldataset module": [[2, "modelfitting-experimentaldataset-module"]], "modelfitting.fit module": [[2, "modelfitting-fit-module"]], "modelfitting.mixingcalculations module": [[2, "modelfitting-mixingcalculations-module"]], "modelfitting.model module": [[2, "modelfitting-model-module"]], "src": [[3, "src"]]}, "indexentries": {"abeliangroup (class in constructterms.group)": [[0, "constructterms.group.AbelianGroup"]], "field (class in constructterms.field)": [[0, "constructterms.field.Field"]], "group (class in constructterms.group)": [[0, "constructterms.group.Group"]], "nonabeliangroup (class in constructterms.group)": [[0, "constructterms.group.NonAbelianGroup"]], "u1group (class in constructterms.group)": [[0, "constructterms.group.U1Group"]], "constructterms": [[0, "module-constructterms"]], "constructterms.calculations": [[0, "module-constructterms.calculations"]], "constructterms.field": [[0, "module-constructterms.field"]], "constructterms.group": [[0, "module-constructterms.group"]], "is_desired() (constructterms.field.field method)": [[0, "constructterms.field.Field.is_desired"]], "is_desired() (constructterms.group.abeliangroup method)": [[0, "constructterms.group.AbelianGroup.is_desired"]], "is_desired() (constructterms.group.nonabeliangroup method)": [[0, "constructterms.group.NonAbelianGroup.is_desired"]], "is_desired() (constructterms.group.u1group method)": [[0, "constructterms.group.U1Group.is_desired"]], "list_allowed_terms() (in module constructterms.calculations)": [[0, "constructterms.calculations.list_allowed_terms"]], "make_product() (constructterms.group.abeliangroup method)": [[0, "constructterms.group.AbelianGroup.make_product"]], "make_product() (constructterms.group.nonabeliangroup method)": [[0, "constructterms.group.NonAbelianGroup.make_product"]], "make_product() (constructterms.group.u1group method)": [[0, "constructterms.group.U1Group.make_product"]], "module": [[0, "module-constructterms"], [0, "module-constructterms.calculations"], [0, "module-constructterms.field"], [0, "module-constructterms.group"]], "times() (constructterms.field.field method)": [[0, "constructterms.field.Field.times"]]}})