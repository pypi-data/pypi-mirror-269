# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import metric_pb2 as metric__pb2


class MetricServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Read = channel.unary_unary(
                '/connector.metric.MetricService/Read',
                request_serializer=metric__pb2.MetricReadRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricsResponse.FromString,
                )
        self.Get = channel.unary_unary(
                '/connector.metric.MetricService/Get',
                request_serializer=metric__pb2.MetricGetRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricResponse.FromString,
                )
        self.Create = channel.unary_unary(
                '/connector.metric.MetricService/Create',
                request_serializer=metric__pb2.MetricCreateRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricResponse.FromString,
                )
        self.BulkCreate = channel.unary_unary(
                '/connector.metric.MetricService/BulkCreate',
                request_serializer=metric__pb2.MetricBulkCreateRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricsResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/connector.metric.MetricService/Update',
                request_serializer=metric__pb2.MetricUpdateRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricResponse.FromString,
                )
        self.Delete = channel.unary_unary(
                '/connector.metric.MetricService/Delete',
                request_serializer=metric__pb2.MetricDeleteRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricResponse.FromString,
                )
        self.AvailableMetrics = channel.unary_unary(
                '/connector.metric.MetricService/AvailableMetrics',
                request_serializer=metric__pb2.AvailableMetricsRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricsResponse.FromString,
                )
        self.AvailableValues = channel.unary_unary(
                '/connector.metric.MetricService/AvailableValues',
                request_serializer=metric__pb2.AvailableValuesRequest.SerializeToString,
                response_deserializer=metric__pb2.AvailableValuesResponse.FromString,
                )
        self.MetricsMatching = channel.unary_unary(
                '/connector.metric.MetricService/MetricsMatching',
                request_serializer=metric__pb2.MetricsMatchingRequest.SerializeToString,
                response_deserializer=metric__pb2.MetricsResponse.FromString,
                )


class MetricServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Read(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Create(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BulkCreate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AvailableMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AvailableValues(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MetricsMatching(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MetricServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Read': grpc.unary_unary_rpc_method_handler(
                    servicer.Read,
                    request_deserializer=metric__pb2.MetricReadRequest.FromString,
                    response_serializer=metric__pb2.MetricsResponse.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=metric__pb2.MetricGetRequest.FromString,
                    response_serializer=metric__pb2.MetricResponse.SerializeToString,
            ),
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=metric__pb2.MetricCreateRequest.FromString,
                    response_serializer=metric__pb2.MetricResponse.SerializeToString,
            ),
            'BulkCreate': grpc.unary_unary_rpc_method_handler(
                    servicer.BulkCreate,
                    request_deserializer=metric__pb2.MetricBulkCreateRequest.FromString,
                    response_serializer=metric__pb2.MetricsResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=metric__pb2.MetricUpdateRequest.FromString,
                    response_serializer=metric__pb2.MetricResponse.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=metric__pb2.MetricDeleteRequest.FromString,
                    response_serializer=metric__pb2.MetricResponse.SerializeToString,
            ),
            'AvailableMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.AvailableMetrics,
                    request_deserializer=metric__pb2.AvailableMetricsRequest.FromString,
                    response_serializer=metric__pb2.MetricsResponse.SerializeToString,
            ),
            'AvailableValues': grpc.unary_unary_rpc_method_handler(
                    servicer.AvailableValues,
                    request_deserializer=metric__pb2.AvailableValuesRequest.FromString,
                    response_serializer=metric__pb2.AvailableValuesResponse.SerializeToString,
            ),
            'MetricsMatching': grpc.unary_unary_rpc_method_handler(
                    servicer.MetricsMatching,
                    request_deserializer=metric__pb2.MetricsMatchingRequest.FromString,
                    response_serializer=metric__pb2.MetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'connector.metric.MetricService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MetricService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Read(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/Read',
            metric__pb2.MetricReadRequest.SerializeToString,
            metric__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/Get',
            metric__pb2.MetricGetRequest.SerializeToString,
            metric__pb2.MetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/Create',
            metric__pb2.MetricCreateRequest.SerializeToString,
            metric__pb2.MetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BulkCreate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/BulkCreate',
            metric__pb2.MetricBulkCreateRequest.SerializeToString,
            metric__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/Update',
            metric__pb2.MetricUpdateRequest.SerializeToString,
            metric__pb2.MetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/Delete',
            metric__pb2.MetricDeleteRequest.SerializeToString,
            metric__pb2.MetricResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AvailableMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/AvailableMetrics',
            metric__pb2.AvailableMetricsRequest.SerializeToString,
            metric__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AvailableValues(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/AvailableValues',
            metric__pb2.AvailableValuesRequest.SerializeToString,
            metric__pb2.AvailableValuesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MetricsMatching(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/connector.metric.MetricService/MetricsMatching',
            metric__pb2.MetricsMatchingRequest.SerializeToString,
            metric__pb2.MetricsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
