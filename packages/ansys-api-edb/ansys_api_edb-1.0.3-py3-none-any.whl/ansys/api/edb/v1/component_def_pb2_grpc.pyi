"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.edb.v1.component_def_pb2
import ansys.api.edb.v1.edb_messages_pb2
import google.protobuf.empty_pb2
import google.protobuf.wrappers_pb2
import grpc

class ComponentDefServiceStub:
    """Component Definition Service"""
    def __init__(self, channel: grpc.Channel) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.component_def_pb2.ComponentDefCreateMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Create a component def in the given database"""

    FindByName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Find a component def in the given database"""

    SetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set the name of the component def"""

    GetName: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        google.protobuf.wrappers_pb2.StringValue] = ...
    """Get the name of the component def"""

    SetFootprintCell: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjPairMessage,
        google.protobuf.empty_pb2.Empty] = ...
    """Set the footprint name for the component def"""

    GetFootprintCell: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage] = ...
    """Get the footprint name of the component def"""

    GetComponentModels: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """Get the component models owned by this component def"""

    GetComponentPins: grpc.UnaryUnaryMultiCallable[
        ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage] = ...
    """Get the component pins owned by this component def."""


class ComponentDefServiceServicer(metaclass=abc.ABCMeta):
    """Component Definition Service"""
    @abc.abstractmethod
    def Create(self,
        request: ansys.api.edb.v1.component_def_pb2.ComponentDefCreateMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Create a component def in the given database"""
        pass

    @abc.abstractmethod
    def FindByName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjNameMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Find a component def in the given database"""
        pass

    @abc.abstractmethod
    def SetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.StringPropertyMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set the name of the component def"""
        pass

    @abc.abstractmethod
    def GetName(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.wrappers_pb2.StringValue:
        """Get the name of the component def"""
        pass

    @abc.abstractmethod
    def SetFootprintCell(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjPairMessage,
        context: grpc.ServicerContext,
    ) -> google.protobuf.empty_pb2.Empty:
        """Set the footprint name for the component def"""
        pass

    @abc.abstractmethod
    def GetFootprintCell(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage:
        """Get the footprint name of the component def"""
        pass

    @abc.abstractmethod
    def GetComponentModels(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """Get the component models owned by this component def"""
        pass

    @abc.abstractmethod
    def GetComponentPins(self,
        request: ansys.api.edb.v1.edb_messages_pb2.EDBObjMessage,
        context: grpc.ServicerContext,
    ) -> ansys.api.edb.v1.edb_messages_pb2.EDBObjCollectionMessage:
        """Get the component pins owned by this component def."""
        pass


def add_ComponentDefServiceServicer_to_server(servicer: ComponentDefServiceServicer, server: grpc.Server) -> None: ...
