Metadata-Version: 2.1
Name: bernard
Version: 0.7.0
Summary: Bot Engine Responding Naturally At Requests Detection
License: AGPL-3.0-or-later
Author: RÃ©my Sanchez
Author-email: remy.sanchez@hyperthese.net
Requires-Python: >=3.10,<4.0
Classifier: License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: aiohttp (>=3.0,<4.0)
Requires-Dist: babel (>=2.0,<3.0)
Requires-Dist: facepy (>=1.0,<2.0)
Requires-Dist: google-api-python-client
Requires-Dist: google-auth (>=2.0,<3.0)
Requires-Dist: google-auth-oauthlib (>=1.0,<2.0)
Requires-Dist: httpx
Requires-Dist: keyring
Requires-Dist: orjson (>=3.0,<4.0)
Requires-Dist: pyjwt (>=2.0,<3.0)
Requires-Dist: python-dateutil (>=2.0,<3.0)
Requires-Dist: pytz
Requires-Dist: redis (>=4.2.0rc1)
Requires-Dist: rich
Requires-Dist: sentry-sdk
Requires-Dist: unidecode (>=1.0,<2.0)
Requires-Dist: watchdog
Description-Content-Type: text/markdown

BERNARD
=======

[![Build Status](https://travis-ci.org/BernardFW/bernard.svg?branch=develop)](https://travis-ci.org/BernardFW/bernard)

Building *instant services* (or chatbots) is a brand new craft. BERNARD
is here to bring it up to speed for the professional world.

- Take advantage of each platform's specificities (Facebook, Telegram,
  ...)
- Connect your existing business API
- Translate and decline your texts
- Extensible to any platform, without merging to upstream

# Get started!

This documentation will bring you methodology, concepts and patterns to
build bots as well as hands-on experience with the code of a bot.

- **[Get Started](./doc/get-started/readme.md)** course and tutorial
- **[Table of contents](./doc/readme.md)** of all topics in
  documentation

# Licensing

There is a dual licencing scheme here:

- By default, AGPL v3+
- If your project is not compatible with the AGPL, please contact
  *<span>remy.sanchez</span>@with-madrid.com*.

# Contribution

Contribution is of course welcome, although there is a few rules to respect
for the well-being of the project.

## Governance

Please do not hesitate to communicate through GitHub issues before committing
to a large contribution: the team of the project has plans and priorities, so
if you end up going against those it will be hard to merge your code.

## Coding Rules

Coding rules are very, very important. There is not too many yet:

- PEP 8
- Imports are normalized by the `make imports` command
- No undocumented code gets merged
- Code bringing test coverage down or breaking tests doesn't get merged

## Testing

Use `py.test`. Node for later: document this part a bit better.

