Metadata-Version: 2.1
Name: sitepy
Version: 0.4.3
Summary: A simple web framework.
Home-page: https://github.com/WolfTheDeveloper/sitepy
Author: WolfTheDev
Author-email: wolfthedev@gmail.com
License: Copyright [2024] [WolfTheDev]
        
        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at
        
            http://www.apache.org/licenses/LICENSE-2.0
        
        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE

# sitepy

A simple web framework for Python.

## Installation

You can install sitepy with pip:

```sh
pip install sitepy
```

## Usage

Here's a basic example of a sitepy application:

```python
from sitepy import sitepy

app = sitepy()

@app.route("/", methods=['GET', 'POST'])
def index():
    return "Hello, world!"

if __name__ == "__main__":
    app.run()
```

This will start a server on localhost:8080 and respond with "Hello, world!" to GET and POST requests at the root URL.

## Features

- Simple routing: Use the @app.route decorator to define routes.

- Middleware support: Use app.use to add middleware functions.

- Static file serving: Files in the static directory are served at /static.

## Contributing

Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.

## License
[Apache](sitepy/LICENSE)
