Metadata-Version: 2.1
Name: DistributionalPrincipalAutoencoder
Version: 0.0.0.dev0
Summary: Distributional Principal Autoencoder
Home-page: https://github.com/xwshen51/DistributionalPrincipalAutoencoder
Author: Xinwei Shen and Nicolai Meinshausen
Author-email: xinwei.shen@stat.math.ethz.ch
License: BSD 3-Clause License
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch
Requires-Dist: numpy
Requires-Dist: matplotlib
Requires-Dist: engression

# Distributional Principal Autoencoder

Distributional Principal Autoencoder (DPA) is a nonlinear dimension reduction method proposed in the paper "[*Distributional Principal Autoencoders*]()" by Xinwei Shen and Nicolai Meinshausen. This directory contains the Python implementation of DPA.


## Installation
The latest release of the Python package can be installed through pip:
```sh
pip install DistributionalPrincipalAutoencoder
```

The development version can be installed from github:

```sh
pip install -e "git+https://github.com/xwshen51/DistributionalPrincipalAutoencoder" 
```


## Usage Example

See [this tutorial](https://github.com/xwshen51/DistributionalPrincipalAutoencoder/blob/main/examples/scurve.ipynb) for an example on S-curve.


## Contact information
If you meet any problems with the code, please submit an issue or contact [Xinwei Shen](mailto:xinwei.shen@stat.math.ethz.ch).
