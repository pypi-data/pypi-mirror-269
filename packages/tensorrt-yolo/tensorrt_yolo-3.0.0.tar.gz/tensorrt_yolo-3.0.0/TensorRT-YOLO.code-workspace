{
	"folders": [
		{
			"path": "."
		}
	],
	"settings": {
		// CPP
		"[cpp]": {
			"editor.tabSize": 4,
			"editor.formatOnSave": true,
			"editor.defaultFormatter": "xaver.clang-format",
		},
		// CPP-xmake
		"xmake.buildDirectory": "${workspaceRoot}/build",
		"xmake.debugConfigType": "codelldb",
		// CPP-clangd
		"clangd.path": "clangd",
		"clangd.checkUpdates": false,
		"clangd.onConfigChanged": "restart",
		"clangd.arguments": [
			// 让 Clangd 生成更详细的日志
			"--log=verbose",
			// 输出的 JSON 文件更美观
			"--pretty",
			// 全局补全
			"--all-scopes-completion",
			// 建议风格：打包(重载函数只会给出一个建议）
			// 相反可以设置为detailed
			"--completion-style=bundled",
			// 跨文件重命名变量
			"--cross-file-rename",
			// 允许补充头文件
			"--header-insertion=iwyu",
			// 输入建议中，已包含头文件的项与还未包含头文件的项会以圆点加以区分
			"--header-insertion-decorators",
			// 在后台自动分析文件(基于 complie_commands，我们用CMake生成)
			"--background-index",
			// 启用 Clang-Tidy 以提供「静态检查」
			"--clang-tidy",
			// Clang-Tidy 静态检查的参数，指出按照哪些规则进行静态检查
			// 参数后部分的*表示通配符
			// 在参数前加入-，如-modernize-use-trailing-return-type，将会禁用某一规则
			"--clang-tidy-checks=cppcoreguidelines-*,performance-*,bugprone-*,portability-*,modernize-*,google-*",
			// 同时开启的任务数量
			"-j=2",
			// pch优化的位置(memory 或 disk，选择memory会增加内存开销，但会提升性能) 推荐在板子上使用disk
			"--pch-storage=disk",
			// 启用这项时，补全函数时，将会给参数提供占位符，键入后按 Tab 可以切换到下一占位符，乃至函数末
			// 我选择禁用
			"--function-arg-placeholders=false",
			// compelie_commands.json 文件的目录位置
			"--compile-commands-dir=.vscode",
			"--enable-config",
			// 默认格式化风格: 谷歌开源项目代码指南（可用的有 LLVM, Google, Chromium, Mozilla, Webkit, Microsoft, GNU 等）
			"--fallback-style=Google",
			// pch优化的位置(memory 或 disk，选择memory会增加内存开销，但会提升性能)
			"--pch-storage=memory",
			// 建议排序模型
			"--ranking-model=heuristics",
		],
		"clangd.fallbackFlags": [
			"-std=c++17",
		],
		// CPP-format
		"clang-format.assumeFilename": ".clang-format",
		"clang-format.language.cuda.enable": true,
		"clang-format.fallbackStyle": "Google",
		// CPP-lldb
		// LLDB 指令自动补全
		"lldb.commandCompletions": true,
		// LLDB 指针显示解引用内容
		"lldb.dereferencePointers": true,
		// LLDB 鼠标悬停在变量上时预览变量值
		"lldb.evaluateForHovers": true,
		// LLDB 监视表达式的默认类型
		"lldb.launch.expressions": "simple",
		// LLDB 不显示汇编代码
		"lldb.showDisassembly": "never",
		// LLDB 生成更详细的日志
		"lldb.verboseLogging": true,

		// Python
		"python.languageServer": "Pylance",
		"[python]": {
			"editor.formatOnSave": true,
			"editor.codeActionsOnSave": {
			  "source.fixAll": "explicit",
			  "source.organizeImports": "explicit"
			},
			"editor.defaultFormatter": "charliermarsh.ruff"
		},
		"ruff.lint.args": [
			"--config=pyproject.toml"
		],
		"ruff.format.args": [
			"--config=pyproject.toml"
		],

		// Front
		// 输出窗口
		"[Log]": {
			// 字体大小
			"editor.fontSize": 15
		},
		// CodeLens的字体系列: Fira Code Retina
		"editor.codeLensFontFamily": "Fira Code Retina",
		// 字体系列: Fira Code Retina
		"editor.fontFamily": "Fira Code Retina",
		// 启用连字体
		"editor.fontLigatures": true,
		// 字体大小
		"editor.fontSize": 15,
		// 集成终端字体大小
		"terminal.integrated.fontSize": 14,
		"editor.fontWeight": "450",
		
		"files.exclude": {
			"**/__pycache__": true,
			"**/.vscode": true,
			"**/.xmake": true
		},
	}
}