Using a member-posting forum
============================

    >>> from Products.CMFCore.utils import getToolByName
    >>> from Products.MailHost.interfaces import IMailHost
    >>> from zope.component import getUtility

    >>> app = layer['app']
    >>> portal = layer['portal']

Test starting conversations, replying and modifying comments in a default
member-posting forum.

Let us log all exceptions, which is useful for debugging. Also, clear portlet
slots, to make the test browser less confused by things like the recent portlet
and the navtree.

    >>> portal.error_log._ignored_exceptions = ()
    >>> portal.left_slots = portal.right_slots = []
    >>> workflow = portal.portal_workflow

Validate mailhost replacement
-----------------------------

    >>> portal.MailHost
    <collective.MockMailHost.MockMailHost.MockMailHost object at ...>

    >>> getToolByName(portal, 'MailHost')
    <collective.MockMailHost.MockMailHost.MockMailHost object at ...>

    >>> getUtility(IMailHost)
    <collective.MockMailHost.MockMailHost.MockMailHost object at ...>


Send email
----------

    >>> to_ = "member@example.com"
    >>> from_ = "admin@example.com"
    >>> msg = """
    ...
    ... Dear Sir:
    ...
    ... Thank you"""
    >>> portal.MailHost.send(msg, to_, from_)
    >>> len(portal.MailHost.messages)
    1
    >>> b'To: member@example.com' in portal.MailHost.messages[0]
    True
    >>> b'From: admin@example.com' in portal.MailHost.messages[0]
    True
    >>> b'Dear Sir:' in portal.MailHost.messages[0]
    True
    >>> portal.MailHost.messages_from
    ['admin@example.com']
    >>> portal.MailHost.messages_to
    [['member@example.com']]
    >>> portal.MailHost.reset()
    >>> len(portal.MailHost.messages)
    0

Send an `email.message.EmailMessage` object with cc/bcc recipients

    >>> from email.message import EmailMessage
    >>> msg = EmailMessage()
    >>> msg["Subject"] = "Hello"
    >>> msg["From"] = "me@example.com"
    >>> msg["To"] = "you@example.com"
    >>> msg["Cc"] = "foo@example.com"
    >>> msg["Bcc"] = "bar@example.com"
    >>> msg.set_content("""
    ... This message is for you, foo, and bar.
    ... """)
    >>> portal.MailHost.send(msg)
    >>> len(portal.MailHost.messages)
    1
    >>> b'To: you@example.com' in portal.MailHost.messages[0]
    True
    >>> b'From: me@example.com' in portal.MailHost.messages[0]
    True
    >>> b'Cc: foo@example.com' in portal.MailHost.messages[0]
    True
    >>> b'bar@example.com' in portal.MailHost.messages[0]
    False
    >>> b'This message is for you, foo, and bar.' in portal.MailHost.messages[0]
    True
    >>> len(portal.MailHost.messages)
    1
    >>> portal.MailHost.messages_from
    ['me@example.com']
    >>> portal.MailHost.messages_to
    [['you@example.com', 'foo@example.com', 'bar@example.com']]
    >>> portal.MailHost.reset()
    >>> len(portal.MailHost.messages)
    0
