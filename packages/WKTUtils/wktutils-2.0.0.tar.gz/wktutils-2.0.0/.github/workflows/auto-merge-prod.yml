name: Auto merge PR's (prod)

on:
  # DO NOT add other jobs to this action. pull_request_target is scary, so jobs with it need to be reviewed!
  pull_request_target:
    branches:
      # To disable the workflow:
      - branchdoesntexist
      # - prod
    types:
      - opened
      - reopened
      - labeled
      - unlabeled
      - edited
      - synchronize

# Until actions stop trampling one another when running on the same commit
# (different PR's), this can't be a matrix. Jobs will override one another otherwise
jobs:
  automerge:
    name: Automerge [prod]
    if: contains(github.event.pull_request.labels.*.name, 'auto merge')
    runs-on: ubuntu-latest
    steps:
      - name: debug info
        run: |
          echo "PR: ${GITHUB_REF}"
          echo "Branch: ${{ github.base_ref }}"
      ###############
      #### DEVEL ####
      ###############
      # Setup Git:
      - uses: actions/checkout@v2
        with:
          ref: devel
      # Change what is in the PR
      - name: Reset branch to ${head_of_pr}
        run: |
          git fetch origin ${head_of_pr}:${head_of_pr}
          git reset --hard ${head_of_pr}
        env:
          head_of_pr: ${{ github.event.pull_request.head.ref }}
      # Open PR to target branch:
      - name: "Open PR to devel"
        uses: peter-evans/create-pull-request@v3.10.0
        with:
          # Let bot open the PR, so auto merge can trigger
          token: ${{ secrets.BOT_TOKEN }}
          labels: 'auto merge,dependancies'
          # Open from wherever the PR was from, to each base branch:
          branch: ${{ github.event.pull_request.head.ref }}
          base: devel
          title: "Automatic merge triggered from ${{ github.event.pull_request.head.ref }} to devel"
          committer: ASF-Discovery <uaf-asf-discovery@alaska.edu>
          author: ASF-Discovery <uaf-asf-discovery@alaska.edu>

      # DON'T wait here. Devel might be broken anyways, so just move on.
      # (tmp waiting here, to see if it behaves the same as devel)
      - name: 'Let action suite of PR start'
        run: sleep 10

      - name: 'Wait for action suite'
        uses: "WyriHaximus/github-action-wait-for-status@v1.3.1"
        id: waitforstatuscheckdev
        with:
          checkInterval: 10
          # Ignore this action:
          ignoreActions: "Automerge [prod],automerge"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: 'Check success of action suite'  
        run: "[[ \"${{ steps.waitforstatuscheckdev.outputs.status }}\" == 'success' ]]"
      ##############
      #### TEST ####
      ##############
      # Setup Git:
      - uses: actions/checkout@v2
        with:
          ref: test
      # Change what is in the PR
      - name: Reset branch to ${head_of_pr}
        run: |
          git fetch origin ${head_of_pr}:${head_of_pr}
          git reset --hard ${head_of_pr}
        env:
          head_of_pr: ${{ github.event.pull_request.head.ref }}
      # Open PR to target branch:
      - name: "Open PR to test"
        uses: peter-evans/create-pull-request@v3.10.0
        with:
          # Let bot open the PR, so auto merge can trigger
          token: ${{ secrets.BOT_TOKEN }}
          labels: 'auto merge,dependancies'
          # Open from wherever the PR was from, to each base branch:
          branch: ${{ github.event.pull_request.head.ref }}
          base: test
          title: "Automatic merge triggered from ${{ github.event.pull_request.head.ref }} to test"
          committer: ASF-Discovery <uaf-asf-discovery@alaska.edu>
          author: ASF-Discovery <uaf-asf-discovery@alaska.edu>

      - name: 'Let action suite of PR start'
        run: sleep 10

      - name: 'Wait for action suite'
        uses: "WyriHaximus/github-action-wait-for-status@v1.3.1"
        id: waitforstatuschecktest
        with:
          checkInterval: 10
          # Ignore this action:
          ignoreActions: "Automerge [prod],automerge"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: 'Check success of action suite'  
        run: "[[ \"${{ steps.waitforstatuschecktest.outputs.status }}\" == 'success' ]]"

      - name: 'Remove auto merge label'
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: auto merge
          github_token: ${{ secrets.GITHUB_TOKEN }}
