# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class KeyPairSpec(str, enum.Enum):
    """
    The specification of asymmetric key-pair.
    | Truvity | JWX - KeyType | JWX - Curve | FIPS | SEC2 | OpenSSL | AWS KMS |
    |-----------|---------------|-------------|-------|-----------|------------|-----------------|
    | ED25519 | OKP | Ed25519 | | | ed25519 | |
    | P256 | EC | P-256 | P-256 | secp256r1 | prime256v1 | ECC_NIST_P256 |
    | P384 | EC | P-384 | P-384 | secp384r1 | secp384r1 | ECC_NIST_P384 |
    | SECP256K1 | EC | secp256k1 | | secp256k1 | secp256k1 | ECC_SECG_P256K1 |

    Useful third-party documentation:

    - [openssl-genrsa - generate an RSA private key](https://www.openssl.org/docs/manmaster/man1/openssl-genpkey.html).
    - [openssl-ec, ec - EC key processing](https://www.openssl.org/docs/man1.0.2/man1/ec.html)
    - [openssl-genrsa - generate an RSA private key](https://www.openssl.org/docs/man3.0/man1/openssl-genrsa.html)
    - [openssl-pkcs8 - PKCS#8 format private key conversion command](https://www.openssl.org/docs/manmaster/man1/openssl-pkcs8.html)
    - [JWX - github.com/lestrrat-go/jwx](https://github.com/lestrrat-go/jwx/blob/main/cmd/jwx/README.md)
    - [FIPS 186-4](https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.186-4.pdf).
    - [SEC2](https://www.secg.org/sec2-v2.pdf).
    - [AWS KMS - Asymmetric key specs](https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html)
      .
    """

    ED_25519 = "ED25519"
    P_256 = "P256"
    P_384 = "P384"
    SECP_256_K_1 = "SECP256K1"

    def visit(
        self,
        ed_25519: typing.Callable[[], T_Result],
        p_256: typing.Callable[[], T_Result],
        p_384: typing.Callable[[], T_Result],
        secp_256_k_1: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is KeyPairSpec.ED_25519:
            return ed_25519()
        if self is KeyPairSpec.P_256:
            return p_256()
        if self is KeyPairSpec.P_384:
            return p_384()
        if self is KeyPairSpec.SECP_256_K_1:
            return secp_256_k_1()
