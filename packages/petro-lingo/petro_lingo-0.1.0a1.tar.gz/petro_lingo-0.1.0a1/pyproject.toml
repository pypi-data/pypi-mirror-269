[tool.poetry]
name = "petro-lingo"
version = "0.1.0-alpha.1"
description = "Petro Lingo application"
license = "Proprietary"
authors = ["Mira Geoscience <support@mirageoscience.com>"]
readme = "package.rst"
repository = "https://github.com/MiraGeoscience/petro-lingo"
documentation = "https://petro-lingo.readthedocs.io/en/latest/"
homepage = "https://mirageoscience.com"
keywords = [] # TODO: add keywords
classifiers = [ # TODO add more classifiers
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
]

packages = [
    { include = "petro_lingo" },
    { include = "petro_lingo-assets" },
]
exclude = [] # files to exclude from packaging

[tool.poetry.dependencies]
python = "^3.10, <3.11"

numpy = "~1.23.5"
openai = "~1.12.0"
pandas = "~2.2.1"
pydantic = "~2.6.3"
scikit-learn = "~1.4.0"
sentencepiece = "~0.1.99"
tqdm = "~4.66.1"
transformers = "~4.36.2"

## pip dependencies
geoh5py = {version = "~0.9.0-alpha.4", source = "pypi", allow-prereleases = true}
#geoh5py = {git = "https://github.com/MiraGeoscience/geoh5py.git", branch = "release/0.9.0"}

[tool.poetry.group.dev.dependencies]
Pygments = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
pytest-mock = "*"
tomli = "*"

[tool.poetry.extras]

[tool.isort]
# settings for compatibility between ``isort`` and ``black`` formatting
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88

[tool.black]
# defaults are just fine

[tool.mypy]
warn_unused_configs = true
ignore_missing_imports = true
scripts_are_modules = true
show_error_context = true
show_column_numbers = true
check_untyped_defs = true

plugins = [
    "numpy.typing.mypy_plugin"
]

[tool.pytest.ini_options]
#addopts =

[tool.coverage.run]
branch = true
source = ["petro_lingo"]
omit = []

[tool.coverage.report]
exclude_lines = [
    "raise NotImplementedError",
    "pass",
    "if TYPE_CHECKING",
    "pragma: no cover"
]

fail_under = 80

[tool.coverage.html]
skip_empty = true
skip_covered = true

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools"]
build-backend = "poetry.core.masonry.api"
