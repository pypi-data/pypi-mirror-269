name: python

on: [push, pull_request, workflow_dispatch]

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      project-exists: ${{ steps.project.outputs.project }}
    steps:
      - uses: actions/checkout@v4

      - name: Check for project files
        id: project
        run: echo "project=$(ls pyproject.toml &> /dev/null && echo true || echo false)" >> $GITHUB_OUTPUT

  build:
    name: Build project
    runs-on: ubuntu-latest
    needs: [check]
    if: needs.check.outputs.project-exists == 'true'

    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: Display python version
        run: python3 --version

      - name: Install dependencies
        run: python3 -m pip install --upgrade build

      - name: Build
        run: python3 -m build

  package:
    name: Package
    runs-on: ubuntu-latest
    needs: [build]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v4

      - name: Fix version in pyproject.toml
        run: |
          sed -i "s#version = \"v0\"#version = \"${GITHUB_REF/refs\/tags\/v/}\"#g" pyproject.toml
          cat pyproject.toml

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version-file: 'pyproject.toml'

      - name: Display python version
        run: python3 --version

      - name: Install dependencies
        run: python3 -m pip install --upgrade -r requirements.txt

      - name: Build
        run: python3 -m build

      - name: Build docs
        run: mkdocs build -s

      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: package
          path: dist

      - name: Upload docs artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docs
          path: site

  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: [package]
    permissions:
      id-token: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: package
        path: dist
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
  
  pages-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    needs: [package]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    permissions:
      contents: read
      pages: write
      id-token: write
    concurrency:
      group: "pages"
      cancel-in-progress: false
    steps:

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: docs
        path: site

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: 'site'
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4