# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: frequenz/api/dispatch/v1/dispatch.proto
# Protobuf Python Version: 4.25.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from google.protobuf import field_mask_pb2 as google_dot_protobuf_dot_field__mask__pb2
from google.protobuf import struct_pb2 as google_dot_protobuf_dot_struct__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from frequenz.api.common.v1.microgrid.components import components_pb2 as frequenz_dot_api_dot_common_dot_v1_dot_microgrid_dot_components_dot_components__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\'frequenz/api/dispatch/v1/dispatch.proto\x12\x18\x66requenz.api.dispatch.v1\x1a\x1bgoogle/protobuf/empty.proto\x1a google/protobuf/field_mask.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a<frequenz/api/common/v1/microgrid/components/components.proto\"\xac\x03\n\x08\x44ispatch\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x14\n\x0cmicrogrid_id\x18\x02 \x01(\x04\x12\x0c\n\x04type\x18\x03 \x01(\t\x12/\n\x0b\x63reate_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12/\n\x0bupdate_time\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nstart_time\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08\x64uration\x18\x07 \x01(\r\x12=\n\x08selector\x18\x08 \x01(\x0b\x32+.frequenz.api.dispatch.v1.ComponentSelector\x12\x11\n\tis_active\x18\t \x01(\x08\x12\x12\n\nis_dry_run\x18\n \x01(\x08\x12(\n\x07payload\x18\x0b \x01(\x0b\x32\x17.google.protobuf.Struct\x12<\n\nrecurrence\x18\x0c \x01(\x0b\x32(.frequenz.api.dispatch.v1.RecurrenceRule\"\xcc\x01\n\x12TimeIntervalFilter\x12.\n\nstart_from\x18\x01 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08start_to\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\x08\x65nd_from\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12*\n\x06\x65nd_to\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"\xbe\x01\n\x11\x43omponentSelector\x12?\n\rcomponent_ids\x18\x01 \x01(\x0b\x32&.frequenz.api.dispatch.v1.ComponentIDsH\x00\x12\\\n\x12\x63omponent_category\x18\x02 \x01(\x0e\x32>.frequenz.api.common.v1.microgrid.components.ComponentCategoryH\x00\x42\n\n\x08selector\"%\n\x0c\x43omponentIDs\x12\x15\n\rcomponent_ids\x18\x01 \x03(\x04\"\xf2\x05\n\x0eRecurrenceRule\x12@\n\x04\x66req\x18\x01 \x01(\x0e\x32\x32.frequenz.api.dispatch.v1.RecurrenceRule.Frequency\x12\x10\n\x08interval\x18\x02 \x01(\r\x12J\n\x0c\x65nd_criteria\x18\x03 \x01(\x0b\x32\x34.frequenz.api.dispatch.v1.RecurrenceRule.EndCriteria\x12\x11\n\tbyminutes\x18\x04 \x03(\r\x12\x0f\n\x07\x62yhours\x18\x05 \x03(\r\x12\x44\n\nbyweekdays\x18\x06 \x03(\x0e\x32\x30.frequenz.api.dispatch.v1.RecurrenceRule.Weekday\x12\x13\n\x0b\x62ymonthdays\x18\x07 \x03(\r\x12\x10\n\x08\x62ymonths\x18\x08 \x03(\r\x1a]\n\x0b\x45ndCriteria\x12\x0f\n\x05\x63ount\x18\x01 \x01(\rH\x00\x12+\n\x05until\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampH\x00\x42\x10\n\x0e\x63ount_or_until\"\xb6\x01\n\x07Weekday\x12\x17\n\x13WEEKDAY_UNSPECIFIED\x10\x00\x12\x12\n\x0eWEEKDAY_MONDAY\x10\x01\x12\x13\n\x0fWEEKDAY_TUESDAY\x10\x02\x12\x15\n\x11WEEKDAY_WEDNESDAY\x10\x03\x12\x14\n\x10WEEKDAY_THURSDAY\x10\x04\x12\x12\n\x0eWEEKDAY_FRIDAY\x10\x05\x12\x14\n\x10WEEKDAY_SATURDAY\x10\x06\x12\x12\n\x0eWEEKDAY_SUNDAY\x10\x07\"\x96\x01\n\tFrequency\x12\x19\n\x15\x46REQUENCY_UNSPECIFIED\x10\x00\x12\x16\n\x12\x46REQUENCY_MINUTELY\x10\x01\x12\x14\n\x10\x46REQUENCY_HOURLY\x10\x02\x12\x13\n\x0f\x46REQUENCY_DAILY\x10\x03\x12\x14\n\x10\x46REQUENCY_WEEKLY\x10\x04\x12\x15\n\x11\x46REQUENCY_MONTHLY\x10\x05\"e\n\x13\x44ispatchListRequest\x12\x14\n\x0cmicrogrid_id\x18\x01 \x01(\x04\x12\x38\n\x06\x66ilter\x18\x02 \x01(\x0b\x32(.frequenz.api.dispatch.v1.DispatchFilter\"\xe3\x01\n\x0e\x44ispatchFilter\x12>\n\tselectors\x18\x01 \x03(\x0b\x32+.frequenz.api.dispatch.v1.ComponentSelector\x12\x43\n\rtime_interval\x18\x02 \x01(\x0b\x32,.frequenz.api.dispatch.v1.TimeIntervalFilter\x12\x16\n\tis_active\x18\x03 \x01(\x08H\x00\x88\x01\x01\x12\x17\n\nis_dry_run\x18\x04 \x01(\x08H\x01\x88\x01\x01\x42\x0c\n\n_is_activeB\r\n\x0b_is_dry_run\"F\n\x0c\x44ispatchList\x12\x36\n\ndispatches\x18\x01 \x03(\x0b\x32\".frequenz.api.dispatch.v1.Dispatch\"\xcb\x02\n\x15\x44ispatchCreateRequest\x12\x14\n\x0cmicrogrid_id\x18\x01 \x01(\x04\x12\x0c\n\x04type\x18\x02 \x01(\t\x12.\n\nstart_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x10\n\x08\x64uration\x18\x04 \x01(\r\x12=\n\x08selector\x18\x05 \x01(\x0b\x32+.frequenz.api.dispatch.v1.ComponentSelector\x12\x11\n\tis_active\x18\x06 \x01(\x08\x12\x12\n\nis_dry_run\x18\x07 \x01(\x08\x12(\n\x07payload\x18\x08 \x01(\x0b\x32\x17.google.protobuf.Struct\x12<\n\nrecurrence\x18\t \x01(\x0b\x32(.frequenz.api.dispatch.v1.RecurrenceRule\"\xb1\x07\n\x15\x44ispatchUpdateRequest\x12\n\n\x02id\x18\x01 \x01(\x04\x12/\n\x0bupdate_mask\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.FieldMask\x12N\n\x06update\x18\x03 \x01(\x0b\x32>.frequenz.api.dispatch.v1.DispatchUpdateRequest.DispatchUpdate\x1a\x8a\x06\n\x0e\x44ispatchUpdate\x12\x11\n\x04type\x18\x01 \x01(\tH\x00\x88\x01\x01\x12.\n\nstart_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x15\n\x08\x64uration\x18\x03 \x01(\rH\x01\x88\x01\x01\x12=\n\x08selector\x18\x04 \x01(\x0b\x32+.frequenz.api.dispatch.v1.ComponentSelector\x12\x16\n\tis_active\x18\x05 \x01(\x08H\x02\x88\x01\x01\x12\x17\n\nis_dry_run\x18\x06 \x01(\x08H\x03\x88\x01\x01\x12(\n\x07payload\x18\x07 \x01(\x0b\x32\x17.google.protobuf.Struct\x12g\n\nrecurrence\x18\x08 \x01(\x0b\x32S.frequenz.api.dispatch.v1.DispatchUpdateRequest.DispatchUpdate.RecurrenceRuleUpdate\x1a\xe7\x02\n\x14RecurrenceRuleUpdate\x12\x45\n\x04\x66req\x18\x01 \x01(\x0e\x32\x32.frequenz.api.dispatch.v1.RecurrenceRule.FrequencyH\x00\x88\x01\x01\x12\x15\n\x08interval\x18\x02 \x01(\rH\x01\x88\x01\x01\x12J\n\x0c\x65nd_criteria\x18\x03 \x01(\x0b\x32\x34.frequenz.api.dispatch.v1.RecurrenceRule.EndCriteria\x12\x11\n\tbyminutes\x18\x04 \x03(\r\x12\x0f\n\x07\x62yhours\x18\x05 \x03(\r\x12\x44\n\nbyweekdays\x18\x06 \x03(\x0e\x32\x30.frequenz.api.dispatch.v1.RecurrenceRule.Weekday\x12\x13\n\x0b\x62ymonthdays\x18\x07 \x03(\r\x12\x10\n\x08\x62ymonths\x18\x08 \x03(\rB\x07\n\x05_freqB\x0b\n\t_intervalB\x07\n\x05_typeB\x0b\n\t_durationB\x0c\n\n_is_activeB\r\n\x0b_is_dry_run\" \n\x12\x44ispatchGetRequest\x12\n\n\x02id\x18\x01 \x01(\x04\"#\n\x15\x44ispatchDeleteRequest\x12\n\n\x02id\x18\x01 \x01(\x04\x32\xa2\x04\n\x18MicrogridDispatchService\x12p\n\x17ListMicrogridDispatches\x12-.frequenz.api.dispatch.v1.DispatchListRequest\x1a&.frequenz.api.dispatch.v1.DispatchList\x12\x62\n\x17\x43reateMicrogridDispatch\x12/.frequenz.api.dispatch.v1.DispatchCreateRequest\x1a\x16.google.protobuf.Empty\x12\x62\n\x17UpdateMicrogridDispatch\x12/.frequenz.api.dispatch.v1.DispatchUpdateRequest\x1a\x16.google.protobuf.Empty\x12h\n\x14GetMicrogridDispatch\x12,.frequenz.api.dispatch.v1.DispatchGetRequest\x1a\".frequenz.api.dispatch.v1.Dispatch\x12\x62\n\x17\x44\x65leteMicrogridDispatch\x12/.frequenz.api.dispatch.v1.DispatchDeleteRequest\x1a\x16.google.protobuf.Emptyb\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'frequenz.api.dispatch.v1.dispatch_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:
  DESCRIPTOR._options = None
  _globals['_DISPATCH']._serialized_start=258
  _globals['_DISPATCH']._serialized_end=686
  _globals['_TIMEINTERVALFILTER']._serialized_start=689
  _globals['_TIMEINTERVALFILTER']._serialized_end=893
  _globals['_COMPONENTSELECTOR']._serialized_start=896
  _globals['_COMPONENTSELECTOR']._serialized_end=1086
  _globals['_COMPONENTIDS']._serialized_start=1088
  _globals['_COMPONENTIDS']._serialized_end=1125
  _globals['_RECURRENCERULE']._serialized_start=1128
  _globals['_RECURRENCERULE']._serialized_end=1882
  _globals['_RECURRENCERULE_ENDCRITERIA']._serialized_start=1451
  _globals['_RECURRENCERULE_ENDCRITERIA']._serialized_end=1544
  _globals['_RECURRENCERULE_WEEKDAY']._serialized_start=1547
  _globals['_RECURRENCERULE_WEEKDAY']._serialized_end=1729
  _globals['_RECURRENCERULE_FREQUENCY']._serialized_start=1732
  _globals['_RECURRENCERULE_FREQUENCY']._serialized_end=1882
  _globals['_DISPATCHLISTREQUEST']._serialized_start=1884
  _globals['_DISPATCHLISTREQUEST']._serialized_end=1985
  _globals['_DISPATCHFILTER']._serialized_start=1988
  _globals['_DISPATCHFILTER']._serialized_end=2215
  _globals['_DISPATCHLIST']._serialized_start=2217
  _globals['_DISPATCHLIST']._serialized_end=2287
  _globals['_DISPATCHCREATEREQUEST']._serialized_start=2290
  _globals['_DISPATCHCREATEREQUEST']._serialized_end=2621
  _globals['_DISPATCHUPDATEREQUEST']._serialized_start=2624
  _globals['_DISPATCHUPDATEREQUEST']._serialized_end=3569
  _globals['_DISPATCHUPDATEREQUEST_DISPATCHUPDATE']._serialized_start=2791
  _globals['_DISPATCHUPDATEREQUEST_DISPATCHUPDATE']._serialized_end=3569
  _globals['_DISPATCHUPDATEREQUEST_DISPATCHUPDATE_RECURRENCERULEUPDATE']._serialized_start=3159
  _globals['_DISPATCHUPDATEREQUEST_DISPATCHUPDATE_RECURRENCERULEUPDATE']._serialized_end=3518
  _globals['_DISPATCHGETREQUEST']._serialized_start=3571
  _globals['_DISPATCHGETREQUEST']._serialized_end=3603
  _globals['_DISPATCHDELETEREQUEST']._serialized_start=3605
  _globals['_DISPATCHDELETEREQUEST']._serialized_end=3640
  _globals['_MICROGRIDDISPATCHSERVICE']._serialized_start=3643
  _globals['_MICROGRIDDISPATCHSERVICE']._serialized_end=4189
# @@protoc_insertion_point(module_scope)
