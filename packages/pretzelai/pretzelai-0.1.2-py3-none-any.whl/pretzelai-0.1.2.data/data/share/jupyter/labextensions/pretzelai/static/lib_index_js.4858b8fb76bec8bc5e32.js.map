{"version":3,"file":"lib_index_js.4858b8fb76bec8bc5e32.js","mappings":"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","sources":["webpack://pretzelai/./src/index.ts"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin\n} from '@jupyterlab/application';\nimport { ICommandPalette } from '@jupyterlab/apputils';\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { IIOPubMessage } from '@jupyterlab/services/lib/kernel/messages';\nimport * as monaco from 'monaco-editor';\nimport OpenAI from 'openai';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\n\nconst PLUGIN_ID = 'pretzelai:plugin';\n\nconst extension: JupyterFrontEndPlugin<void> = {\n  id: PLUGIN_ID,\n  autoStart: true,\n  requires: [ICommandPalette, INotebookTracker, ISettingRegistry],\n  activate: async (\n    app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry\n  ) => {\n    const { commands } = app;\n    const command = 'pretzelai:replace-code';\n\n    let apiKey = '';\n    let openai: OpenAI;\n\n    // Function to load settings\n    function loadSettings() {\n      settingRegistry\n        .load(extension.id)\n        .then(settings => {\n          apiKey = (settings.get('apiKey').composite as string) || '';\n        })\n        .catch(reason => {\n          console.error('Failed to load settings for Pretzel', reason);\n        });\n    }\n    loadSettings();\n\n    function loadOpenai() {\n      if (apiKey) {\n        openai = new OpenAI({\n          apiKey: apiKey,\n          dangerouslyAllowBrowser: true\n        });\n      } else {\n        setTimeout(loadOpenai, 1000);\n      }\n    }\n    loadOpenai();\n\n    // Listen for future changes in settings\n    settingRegistry.pluginChanged.connect((sender, plugin) => {\n      if (plugin === extension.id) {\n        loadSettings();\n      }\n    });\n\n    let embeddings;\n\n    // Function to print the source of all cells once the notebook is defined\n    function getEmbeddings() {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook?.model && openai) {\n        const currentNotebookPath = notebook.context.path;\n        const embeddingsPath =\n          currentNotebookPath.replace('.ipynb', '') + '_embeddings.json';\n\n        app.serviceManager.contents\n          .get(embeddingsPath)\n          .then(file => {\n            try {\n              embeddings = JSON.parse(file.content);\n              console.log(embeddings);\n            } catch (error) {\n              console.error('Error parsing embeddings JSON:', error);\n            }\n          })\n          .catch(async error => {\n            console.log(\n              `Creating file ${embeddingsPath} as it does not exist.`\n            );\n            const cells = notebook!.model!.sharedModel.cells;\n            const embeddings = await Promise.all(\n              cells.slice(0, 1).map(async cell => {\n                try {\n                  const response = await openai.embeddings.create({\n                    model: 'text-embedding-3-large',\n                    input: cell.source\n                  });\n                  return {response.data[0].embedding;\n                } catch (error) {\n                  console.error('Error generating embedding:', error);\n                  return null;\n                }\n              })\n            );\n            try {\n              await app.serviceManager.contents.save(embeddingsPath, {\n                type: 'file',\n                format: 'text',\n                content: '{}'\n              });\n              console.log('File created successfully.');\n            } catch (saveError) {\n              console.error('Error creating file:', saveError);\n            }\n          });\n      } else {\n        setTimeout(getEmbeddings, 1000);\n      }\n    }\n    getEmbeddings();\n\n    async function getVariableValue(\n      variableName: string\n    ): Promise<string | null> {\n      const notebook = notebookTracker.currentWidget;\n      if (notebook && notebook.sessionContext.session?.kernel) {\n        const kernel = notebook.sessionContext.session.kernel;\n        try {\n          // get the type - if dataframe, we get columns\n          // if other, we get the string representation\n          const executeRequest = kernel.requestExecute({\n            code: `print(${variableName})`\n          });\n          let variableValue: string | null = null;\n\n          // Registering a message hook to intercept messages\n          kernel.registerMessageHook(\n            executeRequest.msg.header.msg_id,\n            (msg: IIOPubMessage) => {\n              if (\n                msg.header.msg_type === 'stream' &&\n                // @ts-expect-error tserror\n                msg.content.name === 'stdout'\n              ) {\n                // @ts-expect-error tserror\n                variableValue = msg.content.text.trim();\n              }\n              return true;\n            }\n          );\n\n          // Await the completion of the execute request\n          const reply = await executeRequest.done;\n          if (reply && reply.content.status === 'ok') {\n            return variableValue;\n          } else {\n            console.error('Failed to retrieve variable value');\n            return null;\n          }\n        } catch (error) {\n          console.error('Error retrieving variable value:', error);\n          return null;\n        }\n      } else {\n        console.error('No active kernel found');\n        return null;\n      }\n    }\n\n    commands.addCommand(command, {\n      label: 'Replace Cell Code',\n      execute: () => {\n        const activeCell = notebookTracker.activeCell;\n\n        if (activeCell) {\n          // Cmd K twice should toggle the box\n          // Check if an existing div with ID pretzelParentContainerAI exists on activeCell.node\n          const existingDiv = activeCell.node.querySelector(\n            '#pretzelParentContainerAI'\n          );\n          if (existingDiv) {\n            // If so, delete that div\n            existingDiv.remove();\n            // Switch focus back to the Jupyter cell\n            activeCell!.editor!.focus();\n            return;\n          }\n\n          const oldCode = activeCell.model.sharedModel.source;\n\n          // Create a parent container for all dynamically created elements\n          const parentContainer = document.createElement('div');\n          parentContainer.id = 'pretzelParentContainerAI';\n          activeCell.node.appendChild(parentContainer);\n          // Create an input field and append it below the cell\n          const inputContainer = document.createElement('div');\n          inputContainer.style.marginTop = '10px';\n          inputContainer.style.marginLeft = '70px';\n          inputContainer.style.display = 'flex';\n          inputContainer.style.flexDirection = 'column';\n          parentContainer.appendChild(inputContainer);\n\n          const inputField = document.createElement('textarea');\n          inputField.placeholder = 'Enter your text';\n          inputField.style.width = '100%';\n          inputField.style.height = '100px';\n          inputContainer.appendChild(inputField);\n          inputField.addEventListener('keydown', event => {\n            if (event.key === 'Escape') {\n              // TODO: this doesn't work - the Escape key isn't being captured\n              // but every other key press is being captured\n              event.preventDefault(); // Prevent any default behavior\n              // Shift focus back to the editor of the active cell\n              const activeCell = notebookTracker.activeCell;\n              if (activeCell && activeCell.editor) {\n                activeCell.editor.focus(); // Focus the editor of the active cell\n              }\n            }\n          });\n\n          const inputFieldButtonsContainer = document.createElement('div');\n          inputFieldButtonsContainer.style.marginTop = '10px';\n          inputFieldButtonsContainer.style.display = 'flex';\n          inputFieldButtonsContainer.style.flexDirection = 'row';\n          inputContainer.appendChild(inputFieldButtonsContainer);\n          inputField.focus();\n\n          const submitButton = document.createElement('button');\n          submitButton.textContent = 'Submit';\n          submitButton.style.backgroundColor = 'lightblue';\n          submitButton.style.borderRadius = '5px';\n          submitButton.style.border = '1px solid darkblue';\n          submitButton.style.maxWidth = '100px';\n          submitButton.style.minHeight = '25px';\n          submitButton.style.marginTop = '10px';\n          submitButton.style.marginRight = '10px';\n          inputFieldButtonsContainer.appendChild(submitButton);\n\n          // write code to add a button the removed the inputField and submitButton\n          const removeButton = document.createElement('button');\n          removeButton.textContent = 'Remove';\n          removeButton.style.backgroundColor = 'lightcoral';\n          removeButton.style.borderRadius = '5px';\n          removeButton.style.border = '1px solid darkred';\n          removeButton.style.maxWidth = '100px';\n          removeButton.style.minHeight = '25px';\n          removeButton.style.marginTop = '10px';\n          inputFieldButtonsContainer.appendChild(removeButton);\n          removeButton.addEventListener('click', () => {\n            activeCell.node.removeChild(parentContainer);\n          });\n\n          const handleAccept = async () => {\n            let userInput = inputField.value;\n            if (userInput !== '') {\n              parentContainer.removeChild(inputContainer);\n              let diffEditor: monaco.editor.IStandaloneDiffEditor | null = null;\n              const renderEditor = (gen: string) => {\n                try {\n                  if (!diffEditor) {\n                    createEditorComponents();\n                  }\n                  const modifiedModel = diffEditor!.getModel()!.modified;\n                  const endLineNumber = modifiedModel.getLineCount();\n                  const endColumn =\n                    modifiedModel.getLineMaxColumn(endLineNumber);\n                  modifiedModel.applyEdits([\n                    {\n                      range: new monaco.Range(\n                        endLineNumber,\n                        endColumn,\n                        endLineNumber,\n                        endColumn\n                      ),\n                      text: gen,\n                      forceMoveMarkers: true\n                    }\n                  ]);\n                } catch (error) {\n                  console.log('Error rendering editor:', error);\n                }\n              };\n\n              const createEditorComponents = () => {\n                // generate the editor components\n                // first, top level container to hold all diff related items\n                const diffContainer = document.createElement('div');\n                diffContainer.style.marginTop = '10px';\n                diffContainer.style.display = 'flex';\n                diffContainer.style.flexDirection = 'column';\n                parentContainer.appendChild(diffContainer);\n\n                // next, container to hold the diff editor\n                const diffEditorContainer = document.createElement('div');\n                diffEditorContainer.style.height = '200px';\n                diffContainer.appendChild(diffEditorContainer);\n\n                // finally, the diff editor itself\n                const currentTheme =\n                  document.body.getAttribute('data-jp-theme-light') === 'true'\n                    ? 'vs'\n                    : 'vs-dark';\n                diffEditor = monaco.editor.createDiffEditor(\n                  diffEditorContainer,\n                  {\n                    readOnly: true,\n                    theme: currentTheme\n                  }\n                );\n                diffEditor.setModel({\n                  original: monaco.editor.createModel(oldCode, 'python'),\n                  modified: monaco.editor.createModel('', 'python')\n                });\n\n                const diffButtonsContainer = document.createElement('div');\n                diffButtonsContainer.style.marginTop = '10px';\n                diffButtonsContainer.style.marginLeft = '70px';\n                diffButtonsContainer.style.display = 'flex';\n                diffButtonsContainer.style.flexDirection = 'row';\n                diffContainer.appendChild(diffButtonsContainer);\n\n                // Create \"Accept\" and \"Reject\" buttons\n                const acceptButton = document.createElement('button');\n                acceptButton.textContent = 'Accept';\n                acceptButton.style.backgroundColor = 'lightblue';\n                acceptButton.style.borderRadius = '5px';\n                acceptButton.style.border = '1px solid darkblue';\n                acceptButton.style.maxWidth = '100px';\n                acceptButton.style.minHeight = '25px';\n                acceptButton.style.marginRight = '10px';\n                acceptButton.addEventListener('click', () => {\n                  const modifiedCode = diffEditor!\n                    .getModel()!\n                    .modified.getValue();\n                  activeCell.model.sharedModel.source = modifiedCode;\n                  commands.execute('notebook:run-cell');\n                  activeCell.node.removeChild(parentContainer);\n                });\n                diffButtonsContainer.appendChild(acceptButton);\n\n                const rejectButton = document.createElement('button');\n                rejectButton.textContent = 'Reject';\n                rejectButton.style.backgroundColor = 'lightblue';\n                rejectButton.style.borderRadius = '5px';\n                rejectButton.style.border = '1px solid darkblue';\n                rejectButton.style.maxWidth = '100px';\n                rejectButton.style.minHeight = '25px';\n                rejectButton.style.marginRight = '10px';\n                rejectButton.addEventListener('click', () => {\n                  activeCell.node.removeChild(parentContainer);\n                  activeCell.model.sharedModel.source = oldCode;\n                });\n                diffButtonsContainer.appendChild(rejectButton);\n\n                const editPromptButton = document.createElement('button');\n                editPromptButton.textContent = 'Edit Prompt';\n                editPromptButton.style.backgroundColor = 'lightblue';\n                editPromptButton.style.borderRadius = '5px';\n                editPromptButton.style.border = '1px solid darkblue';\n                editPromptButton.style.maxWidth = '100px';\n                editPromptButton.style.minHeight = '25px';\n                editPromptButton.style.marginRight = '10px';\n                editPromptButton.addEventListener('click', () => {\n                  parentContainer.removeChild(diffContainer);\n                  parentContainer.appendChild(inputContainer);\n                  diffEditor = null;\n                });\n                diffButtonsContainer.appendChild(editPromptButton);\n\n                // Handle Enter key press to trigger accept on accept/reject buttons\n                diffButtonsContainer.addEventListener('keydown', event => {\n                  if (event.key === 'Enter') {\n                    event.preventDefault();\n                    const activeElement = document.activeElement;\n                    if (activeElement === acceptButton) {\n                      acceptButton.click();\n                    } else if (activeElement === rejectButton) {\n                      rejectButton.click();\n                    }\n                  }\n                });\n\n                // Handle Escape key press to trigger reject on accept/reject buttons\n                diffButtonsContainer.addEventListener('keydown', event => {\n                  if (event.key === 'Escape') {\n                    event.preventDefault();\n                    rejectButton.click();\n                  }\n                });\n              };\n\n              // TODO: Use a better way to determine which source is used\n              const isLocalhost = window.location.hostname === 'localhost';\n\n              const variablePattern = /@(\\w+)/g;\n              let match;\n              let modifiedUserInput = userInput;\n              while ((match = variablePattern.exec(userInput)) !== null) {\n                try {\n                  const variableName = match[1];\n                  // get value of var using the getVariableValue function\n                  const variableType = await getVariableValue(\n                    `type(${variableName})`\n                  );\n\n                  // check if variableType is dataframe\n                  // if it is, get columns and add to modifiedUserInput\n                  if (variableType?.includes('DataFrame')) {\n                    const variableColumns = await getVariableValue(\n                      `${variableName}.columns`\n                    );\n                    modifiedUserInput += `\\n${variableName} is a dataframe with the following columns: ${variableColumns}\\n`;\n                  } else if (variableType) {\n                    const variableValue = await getVariableValue(variableName);\n                    modifiedUserInput += `\\nPrinting ${variableName} in Python returns the string ${variableValue}\\n`;\n                  }\n                } catch (error) {\n                  console.error(`Error accessing variable ${match[1]}:`, error);\n                }\n              }\n              userInput = modifiedUserInput;\n\n              if (isLocalhost) {\n                try {\n                  const complete = async () => {\n                    const stream = await openai.chat.completions.create({\n                      model: 'gpt-4-turbo-preview',\n                      messages: [\n                        {\n                          role: 'user',\n                          content: `Write python code to do \\n\"\"\"\\n${userInput}\\n\"\"\"\\nThe previous code is\\n\"\"\"\\n${oldCode}\\n\"\"\"\\nReturn ONLY executable python code, no backticks`\n                        }\n                      ],\n                      stream: true\n                    });\n                    for await (const chunk of stream) {\n                      renderEditor(chunk.choices[0]?.delta?.content || '');\n                    }\n                  };\n                  complete();\n                } catch (error) {\n                  activeCell.node.removeChild(parentContainer);\n                }\n              } else {\n                const options: any = {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    oldCode,\n                    userInput\n                  })\n                };\n\n                try {\n                  const response = await fetch(\n                    'https://q8qeei2tn4.execute-api.us-west-1.amazonaws.com/default/pretzel_notebook',\n                    options\n                  );\n                  const data = await response.json();\n                  const gen = data.message;\n                  renderEditor(gen);\n                } catch (error) {\n                  activeCell.model.sharedModel.source = `# Error: ${error}\\n${oldCode}`;\n                  activeCell.node.removeChild(parentContainer);\n                }\n              }\n            }\n          };\n\n          // Handle Enter key press to trigger submit\n          inputField.addEventListener('keydown', event => {\n            if (event.key === 'Enter') {\n              event.preventDefault();\n              handleAccept();\n            }\n          });\n\n          // Handle submit button click to trigger accept\n          submitButton.addEventListener('click', handleAccept);\n        }\n      }\n    });\n\n    const category = 'Cell Operations';\n    palette.addItem({ command, category });\n\n    app.commands.addKeyBinding({\n      command,\n      keys: ['Accel K'],\n      selector: '.jp-Notebook'\n    });\n  }\n};\n\nexport default extension;\n"],"names":[],"sourceRoot":""}